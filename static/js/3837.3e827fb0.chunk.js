"use strict";(self.webpackChunkquiz_app=self.webpackChunkquiz_app||[]).push([[3837],{3837:e=>{e.exports=JSON.parse('[{"question":"What is Terraform Remote State Storage?","answers":[{"text":"A cloud storage service","isCorrect":false},{"text":"A version control system","isCorrect":false},{"text":"A centralized location for storing Terraform state files","isCorrect":true},{"text":"A deployment automation tool","isCorrect":false}]},{"question":"Why is remote state storage important in Terraform?","answers":[{"text":"It speeds up Terraform execution","isCorrect":false},{"text":"It provides version control for Terraform files","isCorrect":false},{"text":"It allows collaboration in a team environment","isCorrect":true},{"text":"It is not important for Terraform operations","isCorrect":false}]},{"question":"Which backend type in Terraform is commonly used for remote state storage?","answers":[{"text":"Local","isCorrect":false},{"text":"S3","isCorrect":true},{"text":"Azure","isCorrect":false},{"text":"HTTP","isCorrect":false}]},{"question":"What is the purpose of a Terraform backend configuration?","answers":[{"text":"To define provider settings","isCorrect":false},{"text":"To configure resource dependencies","isCorrect":false},{"text":"To specify where Terraform stores its state","isCorrect":true},{"text":"To define variables for Terraform files","isCorrect":false}]},{"question":"Which command is used to initialize a Terraform configuration with a specific backend?","answers":[{"text":"terraform apply","isCorrect":false},{"text":"terraform init","isCorrect":true},{"text":"terraform plan","isCorrect":false},{"text":"terraform validate","isCorrect":false}]},{"question":"What is the purpose of the \'terraform.tfstate\' file?","answers":[{"text":"It contains the Terraform configuration","isCorrect":false},{"text":"It stores sensitive information like passwords","isCorrect":false},{"text":"It holds the current state of your infrastructure","isCorrect":true},{"text":"It is a backup file for Terraform scripts","isCorrect":false}]},{"question":"Which backend type is appropriate for storing Terraform state securely and with access control?","answers":[{"text":"Local","isCorrect":false},{"text":"S3","isCorrect":true},{"text":"HTTP","isCorrect":false},{"text":"Azure","isCorrect":false}]},{"question":"What is the purpose of the \'backend\' block in a Terraform configuration?","answers":[{"text":"To define provider-specific settings","isCorrect":false},{"text":"To configure resource dependencies","isCorrect":false},{"text":"To specify the backend configuration","isCorrect":true},{"text":"To declare input variables","isCorrect":false}]},{"question":"Which AWS service is commonly used for Terraform remote state storage?","answers":[{"text":"EC2","isCorrect":false},{"text":"S3","isCorrect":true},{"text":"RDS","isCorrect":false},{"text":"Lambda","isCorrect":false}]},{"question":"How does Terraform ensure the consistency of the remote state when multiple users are working on the same infrastructure?","answers":[{"text":"By locking the state file during operations","isCorrect":true},{"text":"By creating multiple copies of the state file","isCorrect":false},{"text":"By relying on eventual consistency","isCorrect":false},{"text":"By preventing concurrent access","isCorrect":false}]},{"question":"What is the purpose of the \'encrypt\' option in a Terraform backend configuration?","answers":[{"text":"To encrypt the Terraform configuration files","isCorrect":false},{"text":"To enable encryption for sensitive data in the state file","isCorrect":true},{"text":"To encrypt communication between Terraform and the backend","isCorrect":false},{"text":"To encrypt the backend storage itself","isCorrect":false}]},{"question":"Which authentication method is commonly used for Terraform backends like AWS S3?","answers":[{"text":"API key","isCorrect":false},{"text":"Access key and secret key","isCorrect":true},{"text":"Username and password","isCorrect":false},{"text":"OAuth token","isCorrect":false}]},{"question":"What is the purpose of the \'dynamodb_table\' option in the Terraform S3 backend configuration?","answers":[{"text":"To define the backend storage type","isCorrect":false},{"text":"To specify the AWS DynamoDB table for state locking","isCorrect":true},{"text":"To enable versioning for the state file","isCorrect":false},{"text":"To configure the encryption settings","isCorrect":false}]},{"question":"Which command is used to migrate an existing local Terraform state to a remote backend?","answers":[{"text":"terraform migrate","isCorrect":false},{"text":"terraform move","isCorrect":false},{"text":"terraform state migrate","isCorrect":false},{"text":"terraform init","isCorrect":true}]},{"question":"What is the purpose of the \'key\' option in the Terraform S3 backend configuration?","answers":[{"text":"To specify the AWS access key","isCorrect":false},{"text":"To define the encryption key","isCorrect":false},{"text":"To set the path to the state file within the S3 bucket","isCorrect":true},{"text":"To set the AWS secret key","isCorrect":false}]},{"question":"Which of the following is a benefit of using a remote backend for Terraform?","answers":[{"text":"Faster execution of Terraform commands","isCorrect":false},{"text":"Improved collaboration in a team environment","isCorrect":true},{"text":"Reduced infrastructure costs","isCorrect":false},{"text":"Elimination of the need for Terraform plans","isCorrect":false}]},{"question":"What is the purpose of the \'lock_table\' option in the Terraform S3 backend configuration?","answers":[{"text":"To specify the table for state locking","isCorrect":false},{"text":"To configure the encryption settings","isCorrect":false},{"text":"To enable versioning for the state file","isCorrect":false},{"text":"To set the DynamoDB table used for state locking","isCorrect":true}]},{"question":"How can you configure Terraform to use a specific version of the state file format?","answers":[{"text":"By setting the \'terraform_version\' option in the backend configuration","isCorrect":true},{"text":"By using the \'terraform state version\' command","isCorrect":false},{"text":"By specifying the version in the Terraform configuration file","isCorrect":false},{"text":"By using the \'terraform init -version\' command","isCorrect":false}]},{"question":"What is the purpose of the \'force_unlock\' command in Terraform?","answers":[{"text":"To forcefully apply changes in the Terraform configuration","isCorrect":false},{"text":"To force unlock a locked Terraform state","isCorrect":true},{"text":"To override state file conflicts","isCorrect":false},{"text":"To force the use of a specific backend","isCorrect":false}]},{"question":"How can you enable versioning for Terraform state files stored in AWS S3?","answers":[{"text":"By setting the \'versioning\' option in the Terraform backend configuration","isCorrect":false},{"text":"By using the \'terraform version enable\' command","isCorrect":false},{"text":"By enabling versioning on the S3 bucket itself","isCorrect":true},{"text":"By configuring the \'state_versioning\' block in Terraform files","isCorrect":false}]},{"question":"What is the purpose of the \'bucket\' option in the Terraform S3 backend configuration?","answers":[{"text":"To specify the AWS S3 bucket name","isCorrect":true},{"text":"To set the backend storage type","isCorrect":false},{"text":"To define the encryption key","isCorrect":false},{"text":"To set the AWS region for the backend","isCorrect":false}]},{"question":"What is the recommended way to manage sensitive data, such as secrets, in Terraform configuration files?","answers":[{"text":"Store secrets directly in Terraform files","isCorrect":false},{"text":"Use environment variables","isCorrect":true},{"text":"Encrypt secrets within the Terraform configuration","isCorrect":false},{"text":"Include secrets in a separate secrets file","isCorrect":false}]},{"question":"Which authentication method is commonly used for Terraform backends like Azure Storage?","answers":[{"text":"Access key and secret key","isCorrect":false},{"text":"Service principal","isCorrect":true},{"text":"Username and password","isCorrect":false},{"text":"OAuth token","isCorrect":false}]},{"question":"What is the purpose of the \'container_name\' option in the Terraform Azure Storage backend configuration?","answers":[{"text":"To set the Azure Storage account name","isCorrect":false},{"text":"To define the Azure Storage container name","isCorrect":true},{"text":"To configure the encryption settings","isCorrect":false},{"text":"To set the Azure region for the backend","isCorrect":false}]},{"question":"How can you configure Terraform to use a specific version of the state file format?","answers":[{"text":"By setting the \'terraform_version\' option in the backend configuration","isCorrect":true},{"text":"By using the \'terraform state version\' command","isCorrect":false},{"text":"By specifying the version in the Terraform configuration file","isCorrect":false},{"text":"By using the \'terraform init -version\' command","isCorrect":false}]},{"question":"What is the purpose of the \'resource_group_name\' option in the Terraform Azure Storage backend configuration?","answers":[{"text":"To specify the Azure region","isCorrect":false},{"text":"To configure the encryption settings","isCorrect":false},{"text":"To define the Azure Resource Group name","isCorrect":true},{"text":"To set the Azure Storage account name","isCorrect":false}]},{"question":"Which of the following is a benefit of using a remote backend for Terraform?","answers":[{"text":"Faster execution of Terraform commands","isCorrect":false},{"text":"Improved collaboration in a team environment","isCorrect":true},{"text":"Reduced infrastructure costs","isCorrect":false},{"text":"Elimination of the need for Terraform plans","isCorrect":false}]},{"question":"Scenario: You are setting up a new Terraform project. Which backend type would you choose for storing remote state if you are using AWS?","answers":[{"text":"local","isCorrect":false},{"text":"s3","isCorrect":true},{"text":"azure","isCorrect":false},{"text":"gcs","isCorrect":false}]},{"question":"Scenario: Your team is working on a Terraform project, and you want to avoid storing sensitive information in the state file. What can you do to achieve this?","answers":[{"text":"Use the \'terraform init\' command","isCorrect":false},{"text":"Encrypt the entire state file","isCorrect":false},{"text":"Mark sensitive resources with \'sensitive\' attribute","isCorrect":false},{"text":"Use the \'sensitive\' attribute for sensitive values and enable backend encryption","isCorrect":true}]},{"question":"Scenario: You want to ensure that your Terraform state is stored securely and can only be accessed by authorized users. Which backend configuration would you consider?","answers":[{"text":"local","isCorrect":false},{"text":"s3 with versioning and access control","isCorrect":true},{"text":"azure with public access","isCorrect":false},{"text":"gcs with public access","isCorrect":false}]},{"question":"Scenario: Your team is working on a Terraform project that involves multiple environments (e.g., dev, staging, prod). How can you use Terraform workspaces to manage state for each environment?","answers":[{"text":"Create separate directories for each environment","isCorrect":false},{"text":"Use \'terraform init -backend-config\' for each environment","isCorrect":false},{"text":"Use a different workspace for each environment","isCorrect":true},{"text":"Combine all environments into a single state file","isCorrect":false}]},{"question":"Scenario: You want to share the Terraform state with other team members. Which backend type is suitable for collaborative development?","answers":[{"text":"local","isCorrect":false},{"text":"s3","isCorrect":true},{"text":"azure","isCorrect":false},{"text":"gcs","isCorrect":false}]},{"question":"Scenario: You have decided to use Azure Blob Storage as the backend for remote state. How do you authenticate Terraform to access Azure?","answers":[{"text":"Use the Azure portal credentials","isCorrect":false},{"text":"Use a Service Principal and configure \'ARM_CLIENT_ID\', \'ARM_CLIENT_SECRET\', and \'ARM_TENANT_ID\'","isCorrect":true},{"text":"Use a shared access signature (SAS) token","isCorrect":false},{"text":"Use Azure AD Managed Identity","isCorrect":false}]},{"question":"Scenario: You are using Google Cloud Storage (GCS) for remote state storage. What is the recommended way to authenticate Terraform with GCP?","answers":[{"text":"Use a GCP project key file","isCorrect":true},{"text":"Use a GCP service account with environment variables","isCorrect":false},{"text":"Use a user-managed service account","isCorrect":false},{"text":"Use GCP IAM roles for authentication","isCorrect":false}]},{"question":"Scenario: You want to maintain a version history of your Terraform state files. Which backend feature would you use?","answers":[{"text":"Terraform does not support versioning of state files","isCorrect":false},{"text":"Backend-specific versioning mechanisms (e.g., S3 versioning)","isCorrect":true},{"text":"Manual versioning using Git","isCorrect":false},{"text":"Use \'terraform state version\' command","isCorrect":false}]},{"question":"Scenario: Your organization has a strict policy of encrypting all data at rest. How can you enable encryption for Terraform state stored in AWS S3?","answers":[{"text":"Use the \'terraform init -backend-config\' command to set encryption parameters","isCorrect":true},{"text":"Enable server-side encryption in the S3 bucket","isCorrect":false},{"text":"Encrypt state file manually using third-party tools","isCorrect":false},{"text":"Use the \'terraform encrypt\' command","isCorrect":false}]},{"question":"Scenario: You are using Google Cloud Storage for remote state storage, and you want to limit access to specific users. What is the recommended way to configure access control?","answers":[{"text":"Make the bucket public","isCorrect":false},{"text":"Use GCS bucket ACLs to control access","isCorrect":false},{"text":"Configure IAM roles and permissions","isCorrect":true},{"text":"Use a shared access signature (SAS) token","isCorrect":false}]},{"question":"Scenario: Your team is adopting a multi-cloud strategy, and you need to store Terraform state in different cloud providers. How can you achieve this?","answers":[{"text":"Use the \'terraform init -backend-config\' command for each cloud provider","isCorrect":false},{"text":"Create separate Terraform configurations for each cloud provider","isCorrect":false},{"text":"Use Terraform workspaces with different backends for each cloud provider","isCorrect":true},{"text":"Combine all state files into a single multi-cloud state file","isCorrect":false}]},{"question":"Scenario: Your organization is using Terraform Cloud as a remote backend. How can you authenticate Terraform CLI with Terraform Cloud?","answers":[{"text":"Use Terraform Cloud username and password","isCorrect":false},{"text":"Use a user token generated from Terraform Cloud","isCorrect":true},{"text":"Use OAuth credentials","isCorrect":false},{"text":"Use API key provided by Terraform Cloud","isCorrect":false}]},{"question":"Scenario: You are setting up remote state in Azure Blob Storage. What is the purpose of the \'key\' parameter in the backend configuration?","answers":[{"text":"It is not required for Azure Blob Storage backend","isCorrect":false},{"text":"It specifies the path to the Azure Blob Storage container","isCorrect":false},{"text":"It specifies the name of the storage account","isCorrect":false},{"text":"It defines the path to the state file within the Azure Blob Storage container","isCorrect":true}]},{"question":"Scenario: You are using Terraform Cloud for remote state storage, and you want to trigger a run when changes are pushed to a specific branch in your version control system. How can you achieve this?","answers":[{"text":"Use Terraform Cloud API to manually trigger runs","isCorrect":false},{"text":"Configure a webhook in your VCS to trigger runs on push events","isCorrect":true},{"text":"Use \'terraform cloud -trigger\' command","isCorrect":false},{"text":"Set up a cron job to periodically check for changes","isCorrect":false}]},{"question":"Scenario: You are managing infrastructure across different environments using Terraform workspaces. How can you ensure that each workspace has its own isolated state file?","answers":[{"text":"Use separate directories for each environment","isCorrect":false},{"text":"Use different backend configurations for each workspace","isCorrect":false},{"text":"Use \'terraform workspace new\' command for each environment","isCorrect":true},{"text":"Combine all environments into a single state file","isCorrect":false}]},{"question":"Scenario: Your team is working on a Terraform project, and you want to prevent accidental deletion of critical resources. What mechanism can you use in Terraform to achieve this?","answers":[{"text":"Use \'terraform prevent-delete\' command","isCorrect":false},{"text":"Configure IAM roles with deletion prevention","isCorrect":false},{"text":"Use \'terraform taint\' to mark resources for recreation","isCorrect":false},{"text":"Enable \'prevent_destroy\' in the Terraform configuration","isCorrect":true}]},{"question":"Scenario: You are using GitLab CI/CD for your Terraform project, and you want to automate the backend configuration for different branches. What approach can you take?","answers":[{"text":"Manually update backend configuration for each branch","isCorrect":false},{"text":"Use GitLab CI/CD variables for dynamic backend configuration","isCorrect":true},{"text":"Create separate GitLab CI/CD pipelines for each branch","isCorrect":false},{"text":"Use a single backend configuration for all branches","isCorrect":false}]},{"question":"Scenario: You are using Terraform Cloud for remote state storage, and you want to enforce a policy that requires approval before applying changes. What feature of Terraform Cloud can you use?","answers":[{"text":"State locking","isCorrect":false},{"text":"State versioning","isCorrect":false},{"text":"Policy as Code (Sentinel)","isCorrect":true},{"text":"Remote state encryption","isCorrect":false}]},{"question":"Scenario: You are using Terraform Cloud as a remote backend, and you want to set up a VCS integration for your project. Which version control systems are supported by Terraform Cloud?","answers":[{"text":"Git only","isCorrect":false},{"text":"Mercurial only","isCorrect":false},{"text":"Git and Mercurial","isCorrect":false},{"text":"Git, Mercurial, and Subversion","isCorrect":true}]},{"question":"Scenario: Your organization has strict compliance requirements, and you need to ensure that Terraform state is encrypted at rest. What can you do to achieve this?","answers":[{"text":"Use \'terraform encrypt\' command after applying changes","isCorrect":false},{"text":"Enable backend-specific encryption features (e.g., S3 server-side encryption)","isCorrect":true},{"text":"Use a third-party encryption tool on the state file","isCorrect":false},{"text":"Encrypt state file manually using GPG","isCorrect":false}]}]')}}]);