"use strict";(self.webpackChunkquiz_app=self.webpackChunkquiz_app||[]).push([[4023],{4023:e=>{e.exports=JSON.parse('[{"question":"What is Terraform\'s purpose in infrastructure as code?","answers":[{"text":"To deploy physical servers","isCorrect":false},{"text":"To automate and manage cloud infrastructure","isCorrect":true},{"text":"To write application code","isCorrect":false},{"text":"To create network protocols","isCorrect":false}]},{"question":"What is the main advantage of using Terraform loops with \'count\'?","answers":[{"text":"Simplifies code but doesn\'t scale well","isCorrect":false},{"text":"Enables the creation of multiple similar resources","isCorrect":true},{"text":"Only applicable to AWS resources","isCorrect":false},{"text":"Reduces the need for variables","isCorrect":false}]},{"question":"Which keyword is used to define a loop in Terraform?","answers":[{"text":"repeat","isCorrect":false},{"text":"for_each","isCorrect":false},{"text":"loop","isCorrect":false},{"text":"count","isCorrect":true}]},{"question":"How is the \'count\' argument defined in a resource block for creating multiple instances?","answers":[{"text":"\'count\' is not used in resource blocks","isCorrect":false},{"text":"count = 3","isCorrect":true},{"text":"repeat = 3","isCorrect":false},{"text":"instances = 3","isCorrect":false}]},{"question":"What happens if you set \'count\' to 0 in a Terraform resource block?","answers":[{"text":"The resource is created but disabled","isCorrect":false},{"text":"The resource is not created","isCorrect":true},{"text":"The resource is created with a count of 1","isCorrect":false},{"text":"The resource creation fails","isCorrect":false}]},{"question":"How can you reference specific instances created with \'count\' in Terraform?","answers":[{"text":"Using the \'instance\' keyword","isCorrect":false},{"text":"By using the resource name without an index","isCorrect":true},{"text":"Referencing instances is not possible with \'count\'","isCorrect":false},{"text":"By specifying the instance index in square brackets","isCorrect":false}]},{"question":"Which function is used to iterate over a list in Terraform?","answers":[{"text":"for_each","isCorrect":false},{"text":"loop","isCorrect":false},{"text":"foreach","isCorrect":false},{"text":"element","isCorrect":true}]},{"question":"When using \'for_each\', what type of argument does it require?","answers":[{"text":"List","isCorrect":false},{"text":"Map","isCorrect":true},{"text":"String","isCorrect":false},{"text":"Integer","isCorrect":false}]},{"question":"What is the primary use case for using \'count\' over \'for_each\' in Terraform?","answers":[{"text":"When creating multiple resources with similar configurations","isCorrect":true},{"text":"When dealing with complex data structures","isCorrect":false},{"text":"When creating dynamic provider configurations","isCorrect":false},{"text":"When managing environment variables","isCorrect":false}]},{"question":"Which of the following is a benefit of using Terraform loops with \'count\'?","answers":[{"text":"Reduced code readability","isCorrect":false},{"text":"Increased resource creation time","isCorrect":false},{"text":"Simplified configuration for similar resources","isCorrect":true},{"text":"Limited support for cloud providers","isCorrect":false}]},{"question":"Scenario: You are provisioning multiple instances of a web server using Terraform. How can you dynamically define the number of instances using count?","answers":[{"text":"By using the \'instances\' variable","isCorrect":false},{"text":"By specifying the number directly in the resource block","isCorrect":false},{"text":"By using the \'count\' meta-argument in the resource block","isCorrect":true},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false}]},{"question":"Scenario: You need to create multiple AWS S3 buckets with unique names. How can you achieve this using Terraform loops?","answers":[{"text":"By hardcoding bucket names in the configuration file","isCorrect":false},{"text":"By using the \'count\' meta-argument in the resource block and generating unique names","isCorrect":true},{"text":"By creating a separate configuration file for each bucket","isCorrect":false},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false}]},{"question":"Scenario: You are managing a set of Azure Virtual Machines with different configurations. How can you use Terraform loops to define varying instance sizes for each VM?","answers":[{"text":"By creating a separate resource block for each VM size","isCorrect":false},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false},{"text":"By using a map variable to associate VM names with sizes and looping over the map","isCorrect":true},{"text":"By using the \'count\' meta-argument in the resource block","isCorrect":false}]},{"question":"Scenario: You are defining security groups for a set of EC2 instances in AWS. How can you use Terraform loops to create multiple security groups with different rules?","answers":[{"text":"By hardcoding security group rules in the configuration file","isCorrect":false},{"text":"By creating a separate resource block for each security group","isCorrect":false},{"text":"By using the \'count\' meta-argument in the resource block and specifying rules dynamically","isCorrect":true},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false}]},{"question":"Scenario: You are managing a set of Google Cloud Storage buckets with varying access control settings. How can you use Terraform loops to define ACLs for each bucket?","answers":[{"text":"By creating a separate resource block for each bucket and specifying ACLs individually","isCorrect":false},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false},{"text":"By using a map variable to associate bucket names with ACL settings and looping over the map","isCorrect":true},{"text":"By using the \'count\' meta-argument in the resource block","isCorrect":false}]},{"question":"Scenario: You are managing a set of Kubernetes deployments in GKE. How can you use Terraform loops to define multiple deployments with different configurations?","answers":[{"text":"By hardcoding deployment configurations in the configuration file","isCorrect":false},{"text":"By creating a separate resource block for each deployment","isCorrect":false},{"text":"By using a list variable to define different configurations and looping over the list","isCorrect":true},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false}]},{"question":"Scenario: You are managing a set of DNS records for different domains in AWS Route 53. How can you use Terraform loops to create records for each domain?","answers":[{"text":"By hardcoding DNS records in the configuration file for each domain","isCorrect":false},{"text":"By using a map variable to associate domain names with record settings and looping over the map","isCorrect":true},{"text":"By creating a separate resource block for each domain","isCorrect":false},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false}]},{"question":"Scenario: You are managing a set of Azure storage accounts with varying configurations. How can you use Terraform loops to define different settings for each storage account?","answers":[{"text":"By hardcoding storage account configurations in the configuration file","isCorrect":false},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false},{"text":"By creating a separate resource block for each storage account","isCorrect":false},{"text":"By using a map variable to associate storage account names with configurations and looping over the map","isCorrect":true}]},{"question":"Scenario: You are managing a set of Google Cloud Compute Engine instances with varying machine types. How can you use Terraform loops to define different machine types for each instance?","answers":[{"text":"By hardcoding machine types in the configuration file for each instance","isCorrect":false},{"text":"By creating a separate resource block for each instance","isCorrect":false},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false},{"text":"By using a list variable to define different machine types and looping over the list","isCorrect":true}]},{"question":"Scenario: You are managing a set of AWS Lambda functions with varying configurations. How can you use Terraform loops to define different settings for each function?","answers":[{"text":"By hardcoding function configurations in the configuration file","isCorrect":false},{"text":"By creating a separate resource block for each function","isCorrect":false},{"text":"By using a map variable to associate function names with configurations and looping over the map","isCorrect":true},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false}]},{"question":"Scenario: You are managing a set of Google Cloud SQL databases with varying settings. How can you use Terraform loops to define different configurations for each database?","answers":[{"text":"By hardcoding database configurations in the configuration file","isCorrect":false},{"text":"By creating a separate resource block for each database","isCorrect":false},{"text":"By using a map variable to associate database names with configurations and looping over the map","isCorrect":true},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false}]},{"question":"Scenario: You are managing a set of AWS Elastic Load Balancers (ELB) with varying configurations. How can you use Terraform loops to define different settings for each ELB?","answers":[{"text":"By hardcoding ELB configurations in the configuration file","isCorrect":false},{"text":"By creating a separate resource block for each ELB","isCorrect":false},{"text":"By using a map variable to associate ELB names with configurations and looping over the map","isCorrect":true},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false}]},{"question":"Scenario: You are managing a set of Google Cloud Pub/Sub topics with varying configurations. How can you use Terraform loops to define different settings for each topic?","answers":[{"text":"By hardcoding topic configurations in the configuration file","isCorrect":false},{"text":"By creating a separate resource block for each topic","isCorrect":false},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false},{"text":"By using a map variable to associate topic names with configurations and looping over the map","isCorrect":true}]},{"question":"Scenario: You are managing a set of AWS RDS instances with varying configurations. How can you use Terraform loops to define different settings for each RDS instance?","answers":[{"text":"By hardcoding RDS configurations in the configuration file","isCorrect":false},{"text":"By creating a separate resource block for each RDS instance","isCorrect":false},{"text":"By using a map variable to associate RDS instance names with configurations and looping over the map","isCorrect":true},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false}]},{"question":"Scenario: You are managing a set of Google Cloud Identity and Access Management (IAM) roles with varying permissions. How can you use Terraform loops to define different permissions for each role?","answers":[{"text":"By hardcoding IAM role permissions in the configuration file","isCorrect":false},{"text":"By creating a separate resource block for each IAM role","isCorrect":false},{"text":"By using a map variable to associate IAM role names with permissions and looping over the map","isCorrect":true},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false}]},{"question":"Scenario: You are managing a set of AWS ECS services with varying configurations. How can you use Terraform loops to define different settings for each ECS service?","answers":[{"text":"By hardcoding ECS service configurations in the configuration file","isCorrect":false},{"text":"By creating a separate resource block for each ECS service","isCorrect":false},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false},{"text":"By using a map variable to associate ECS service names with configurations and looping over the map","isCorrect":true}]},{"question":"Scenario: You are managing a set of Google Cloud Spanner databases with varying configurations. How can you use Terraform loops to define different settings for each database?","answers":[{"text":"By hardcoding Spanner database configurations in the configuration file","isCorrect":false},{"text":"By creating a separate resource block for each Spanner database","isCorrect":false},{"text":"By using a map variable to associate database names with configurations and looping over the map","isCorrect":true},{"text":"By using the \'for_each\' meta-argument in the resource block","isCorrect":false}]}]')}}]);