"use strict";(self.webpackChunkquiz_app=self.webpackChunkquiz_app||[]).push([[817],{817:e=>{e.exports=JSON.parse('[{"question":"Your organization is migrating to AWS and wants to ensure that IAM users have access to resources only during specified hours. How can you implement time-based access control?","answers":[{"text":"Create a custom IAM policy with time-based conditions for each user","isCorrect":false},{"text":"Use AWS Lambda functions to update IAM user permissions based on a schedule","isCorrect":false},{"text":"Utilize AWS Identity Federation with time-based assertions","isCorrect":false},{"text":"Implement AWS Identity and Access Management (IAM) conditions based on time in IAM policies","isCorrect":true}]},{"question":"In a highly regulated industry, your company needs to ensure that all IAM users have unique credentials and cannot share access keys. What solution should be implemented?","answers":[{"text":"Enforce a policy requiring frequent rotation of access keys for all IAM users","isCorrect":false},{"text":"Use AWS Config to monitor and alert on shared access keys","isCorrect":false},{"text":"Implement AWS Secrets Manager to automatically manage IAM user credentials","isCorrect":true},{"text":"Use AWS Key Management Service (KMS) to encrypt shared access keys","isCorrect":false}]},{"question":"Your organization is adopting a microservices architecture, and you need to manage fine-grained permissions for each service. What IAM feature provides the most scalable and least-privileged access?","answers":[{"text":"IAM Policies with wildcard (*) permissions","isCorrect":false},{"text":"IAM Roles with broad permissions attached to each service","isCorrect":false},{"text":"AWS Resource Access Manager (RAM) for cross-account resource sharing","isCorrect":false},{"text":"IAM Roles with specific permissions attached to each service","isCorrect":true}]},{"question":"As part of a security audit, you need to review and assess the IAM permissions granted to a specific user. What is the most efficient way to accomplish this task?","answers":[{"text":"Use AWS CloudTrail to analyze user activity and permissions","isCorrect":false},{"text":"Manually inspect each IAM policy attached to the user","isCorrect":false},{"text":"Use AWS IAM Access Analyzer to review resource-based policies","isCorrect":true},{"text":"Run AWS Config Rules to check IAM policy compliance","isCorrect":false}]},{"question":"Your company is launching a new product and wants to ensure that IAM users are not inadvertently granted excessive permissions during the development phase. What AWS service can help analyze and simulate the effects of IAM policies?","answers":[{"text":"AWS Identity and Access Management (IAM) Policy Simulator","isCorrect":true},{"text":"AWS Resource Access Manager (RAM)","isCorrect":false},{"text":"AWS Config Rules","isCorrect":false},{"text":"AWS Identity and Access Management (IAM) Access Advisor","isCorrect":false}]},{"question":"Your organization requires IAM users to assume roles when performing specific tasks to ensure accountability and traceability. What is the recommended approach to implement role assumption?","answers":[{"text":"Embed IAM role credentials within applications used by users","isCorrect":false},{"text":"Enable AWS CloudTrail logging for all IAM user activities","isCorrect":false},{"text":"Implement IAM roles with a trust policy allowing specified users to assume them","isCorrect":true},{"text":"Use AWS Identity and Access Management (IAM) roles only for cross-account access","isCorrect":false}]},{"question":"Your organization wants to provide temporary access to AWS resources for external partners without creating IAM user accounts for them. What is the recommended approach to achieve this?","answers":[{"text":"Create IAM users for each external partner with limited permissions","isCorrect":false},{"text":"Use AWS Identity and Access Management (IAM) roles with temporary credentials","isCorrect":true},{"text":"Share the root AWS account credentials with external partners","isCorrect":false},{"text":"Use AWS Identity and Access Management (IAM) groups with time-based access policies","isCorrect":false}]},{"question":"Your organization is using AWS Organizations to manage multiple AWS accounts. You want to enable cross-account access for IAM users in a central account to access resources in other accounts. What is the recommended approach?","answers":[{"text":"Create IAM users with cross-account access permissions in each account","isCorrect":false},{"text":"Enable IAM roles in the central account with trust policies for each managed account","isCorrect":true},{"text":"Use AWS Resource Access Manager (RAM) to share IAM users across accounts","isCorrect":false},{"text":"Grant IAM users in the central account access to the AWS Management Console in each managed account","isCorrect":false}]},{"question":"Your company has implemented a role-based access control (RBAC) model, and you need to ensure that IAM roles are associated with specific job functions. What is the recommended approach for managing IAM roles in this scenario?","answers":[{"text":"Create IAM users for each job function and attach the necessary policies","isCorrect":false},{"text":"Use AWS Identity and Access Management (IAM) roles with descriptive names and tags","isCorrect":true},{"text":"Implement AWS Lambda functions to automate IAM role assignments based on job functions","isCorrect":false},{"text":"Use IAM groups with inline policies for each job function","isCorrect":false}]}]')}}]);