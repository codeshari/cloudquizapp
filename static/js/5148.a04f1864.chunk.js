"use strict";(self.webpackChunkquiz_app=self.webpackChunkquiz_app||[]).push([[5148],{5148:e=>{e.exports=JSON.parse('[{"question":"Scenario: You have a Kubernetes cluster with multiple applications. You need to ensure that a specific PersistentVolume is exclusively used by a single Pod. What storage access mode should you use?","answers":[{"text":"ReadWriteOnce","isCorrect":true},{"text":"ReadOnlyMany","isCorrect":false},{"text":"ReadWriteMany","isCorrect":false},{"text":"SingleUseOnly","isCorrect":false}]},{"question":"Scenario: You want to dynamically provision PersistentVolumes based on StorageClasses. What Kubernetes resource should you use to achieve this?","answers":[{"text":"PersistentVolumeClaim","isCorrect":false},{"text":"StorageClass","isCorrect":true},{"text":"PersistentVolume","isCorrect":false},{"text":"Pod","isCorrect":false}]},{"question":"Scenario: Your application requires high-performance storage with the ability to be accessed by multiple Pods simultaneously. Which access mode should you choose for the PersistentVolume?","answers":[{"text":"ReadWriteOnce","isCorrect":false},{"text":"ReadOnlyMany","isCorrect":false},{"text":"ReadWriteMany","isCorrect":true},{"text":"SingleUseOnly","isCorrect":false}]},{"question":"Scenario: You want to manually create a PersistentVolume that is already associated with a physical storage device. What should you specify in the PersistentVolume\'s specification?","answers":[{"text":"capacity","isCorrect":false},{"text":"accessModes","isCorrect":false},{"text":"storageClassName","isCorrect":false},{"text":"local","isCorrect":true}]},{"question":"Scenario: You have a Pod that requires a specific amount of storage, and you want Kubernetes to dynamically provision a PersistentVolume for it. What resource should you create?","answers":[{"text":"PersistentVolumeClaim","isCorrect":true},{"text":"StorageClass","isCorrect":false},{"text":"PersistentVolume","isCorrect":false},{"text":"Pod","isCorrect":false}]},{"question":"Scenario: Your application needs to access a PersistentVolume from multiple nodes concurrently. What access mode should you use?","answers":[{"text":"ReadWriteOnce","isCorrect":false},{"text":"ReadOnlyMany","isCorrect":false},{"text":"ReadWriteMany","isCorrect":true},{"text":"SingleUseOnly","isCorrect":false}]},{"question":"Scenario: You want to ensure that a Pod always uses the same PersistentVolume even after rescheduling or restarts. What should you use?","answers":[{"text":"StorageClass","isCorrect":false},{"text":"volumeName","isCorrect":true},{"text":"PersistentVolumeClaim","isCorrect":false},{"text":"Pod affinity","isCorrect":false}]},{"question":"Scenario: You need to scale your application, and each replica requires its own dedicated storage. What Kubernetes resource should you use?","answers":[{"text":"PersistentVolume","isCorrect":false},{"text":"Pod","isCorrect":false},{"text":"PersistentVolumeClaim","isCorrect":true},{"text":"StorageClass","isCorrect":false}]},{"question":"Scenario: You want to limit the type of storage that can be requested by applications in your cluster. What Kubernetes resource should you define?","answers":[{"text":"Pod","isCorrect":false},{"text":"PersistentVolume","isCorrect":false},{"text":"StorageClass","isCorrect":true},{"text":"PersistentVolumeClaim","isCorrect":false}]},{"question":"Scenario: You have a critical application that needs fast, low-latency storage and can tolerate data loss. What type of PersistentVolume should you consider?","answers":[{"text":"NFS","isCorrect":false},{"text":"HostPath","isCorrect":false},{"text":"local","isCorrect":true},{"text":"AWS EBS","isCorrect":false}]},{"question":"Scenario: You have a stateful application that requires a unique identifier for each Pod. How can you ensure that each Pod gets its own PersistentVolume?","answers":[{"text":"Use StorageClass","isCorrect":false},{"text":"Define a volumeName in the Pod specification","isCorrect":true},{"text":"Use PersistentVolumeClaim template","isCorrect":false},{"text":"Set accessModes to ReadWriteMany","isCorrect":false}]},{"question":"Scenario: You want to dynamically allocate PersistentVolumes from different storage classes based on specific requirements. What should you use?","answers":[{"text":"Pod","isCorrect":false},{"text":"PersistentVolumeClaim with a StorageClass","isCorrect":true},{"text":"PersistentVolume","isCorrect":false},{"text":"VolumeSnapshot","isCorrect":false}]},{"question":"Scenario: Your application needs to tolerate data loss, and you want to use a network-attached storage solution. Which PersistentVolume type is suitable?","answers":[{"text":"local","isCorrect":false},{"text":"HostPath","isCorrect":false},{"text":"NFS","isCorrect":true},{"text":"Ephemeral","isCorrect":false}]},{"question":"Scenario: You need to share a PersistentVolume among multiple Pods for read-only access. What access mode should you choose?","answers":[{"text":"ReadWriteOnce","isCorrect":false},{"text":"ReadOnlyMany","isCorrect":true},{"text":"ReadWriteMany","isCorrect":false},{"text":"SingleUseOnly","isCorrect":false}]},{"question":"Scenario: You want to ensure that the data in a PersistentVolume persists even if the associated Pod is deleted. What should you configure in the PersistentVolumeClaim?","answers":[{"text":"accessModes","isCorrect":false},{"text":"storageClassName","isCorrect":false},{"text":"persistentVolumeReclaimPolicy","isCorrect":true},{"text":"volumeName","isCorrect":false}]},{"question":"Scenario: You have a Kubernetes cluster with multiple nodes, and you want to use local storage for high-performance applications. What type of PersistentVolume should you consider?","answers":[{"text":"NFS","isCorrect":false},{"text":"local","isCorrect":true},{"text":"HostPath","isCorrect":false},{"text":"AWS EBS","isCorrect":false}]},{"question":"Scenario: You need to restrict the maximum size of a PersistentVolume that can be requested by a Pod. What Kubernetes resource should you configure?","answers":[{"text":"Pod","isCorrect":false},{"text":"PersistentVolumeClaim","isCorrect":false},{"text":"ResourceQuota","isCorrect":true},{"text":"StorageClass","isCorrect":false}]},{"question":"Scenario: Your application requires low-latency storage, and you want to use the local storage of a specific node. How should you define the PersistentVolume?","answers":[{"text":"Set node affinity in the PersistentVolume","isCorrect":false},{"text":"Use a local PersistentVolume with a nodeSelector","isCorrect":true},{"text":"Specify local storage in the Pod specification","isCorrect":false},{"text":"Use the local-storage StorageClass","isCorrect":false}]},{"question":"Scenario: You have a stateful application that needs to synchronize data across replicas using shared storage. Which access mode should you choose for the PersistentVolume?","answers":[{"text":"ReadWriteOnce","isCorrect":false},{"text":"ReadOnlyMany","isCorrect":true},{"text":"ReadWriteMany","isCorrect":false},{"text":"SingleUseOnly","isCorrect":false}]},{"question":"Scenario: You want to prevent a PersistentVolume from being dynamically provisioned. What should you include in the PersistentVolume specification?","answers":[{"text":"storageClassName","isCorrect":false},{"text":"nodeAffinity","isCorrect":false},{"text":"persistentVolumeReclaimPolicy","isCorrect":true},{"text":"volumeName","isCorrect":false}]},{"question":"Scenario: Your application needs to use a specific type of storage for compliance reasons. How can you enforce this policy in Kubernetes?","answers":[{"text":"Set node affinity in the PersistentVolume","isCorrect":false},{"text":"Use PodDisruptionBudget","isCorrect":false},{"text":"Define a storageClassName with volumeBindingMode","isCorrect":true},{"text":"Use a local PersistentVolume with a nodeSelector","isCorrect":false}]},{"question":"Scenario: Your application needs to dynamically request storage based on its requirements. What Kubernetes resource should you create?","answers":[{"text":"PersistentVolume","isCorrect":false},{"text":"PersistentVolumeClaim","isCorrect":true},{"text":"StorageClass","isCorrect":false},{"text":"Pod","isCorrect":false}]},{"question":"Scenario: You want to deploy an application that requires shared storage between Pods on different nodes. What access mode should you use for the PersistentVolume?","answers":[{"text":"ReadWriteOnce","isCorrect":false},{"text":"ReadOnlyMany","isCorrect":true},{"text":"ReadWriteMany","isCorrect":false},{"text":"SingleUseOnly","isCorrect":false}]},{"question":"Scenario: Your application needs to read from and write to a PersistentVolume simultaneously. What access mode should you choose?","answers":[{"text":"ReadWriteOnce","isCorrect":true},{"text":"ReadOnlyMany","isCorrect":false},{"text":"ReadWriteMany","isCorrect":false},{"text":"SingleUseOnly","isCorrect":false}]},{"question":"Scenario: You want to retain the PersistentVolume even if the associated PersistentVolumeClaim is deleted. What reclaim policy should you set in the PersistentVolume?","answers":[{"text":"Retain","isCorrect":true},{"text":"Delete","isCorrect":false},{"text":"Recycle","isCorrect":false},{"text":"Archive","isCorrect":false}]},{"question":"Scenario: You need to ensure that a specific StorageClass is used when dynamically provisioning PersistentVolumes. What Kubernetes resource should you create?","answers":[{"text":"PersistentVolume","isCorrect":false},{"text":"Pod","isCorrect":false},{"text":"StorageClass","isCorrect":true},{"text":"PersistentVolumeClaim","isCorrect":false}]},{"question":"Scenario: Your application requires high-performance storage with exclusive access to a node. What type of PersistentVolume should you consider?","answers":[{"text":"local","isCorrect":true},{"text":"HostPath","isCorrect":false},{"text":"NFS","isCorrect":false},{"text":"Ephemeral","isCorrect":false}]},{"question":"Scenario: You want to automatically scale your application and dynamically allocate storage. What Kubernetes resource allows for this dynamic provisioning?","answers":[{"text":"Pod","isCorrect":false},{"text":"PersistentVolume","isCorrect":false},{"text":"StorageClass","isCorrect":true},{"text":"PersistentVolumeClaim","isCorrect":false}]},{"question":"Scenario: Your application requires a specific volume type, and you want to enforce this across all PersistentVolumes. What should you define in the StorageClass?","answers":[{"text":"volumeBindingMode","isCorrect":false},{"text":"PersistentVolumeClaim","isCorrect":false},{"text":"volumeType","isCorrect":true},{"text":"Pod affinity","isCorrect":false}]},{"question":"Scenario: You need to dynamically provision storage based on specific requirements and use a different StorageClass for each scenario. What should you create?","answers":[{"text":"Pod","isCorrect":false},{"text":"PersistentVolume","isCorrect":false},{"text":"StorageClass","isCorrect":true},{"text":"PersistentVolumeClaim","isCorrect":false}]},{"question":"Scenario: You want to use a specific PersistentVolume for a Pod. What field in the PersistentVolumeClaim allows you to specify this?","answers":[{"text":"storageClassName","isCorrect":false},{"text":"volumeName","isCorrect":true},{"text":"accessModes","isCorrect":false},{"text":"persistentVolumeReclaimPolicy","isCorrect":false}]},{"question":"Scenario: Your application requires high-performance storage and can tolerate data loss. What type of PersistentVolume should you consider?","answers":[{"text":"NFS","isCorrect":false},{"text":"local","isCorrect":false},{"text":"HostPath","isCorrect":false},{"text":"Ephemeral","isCorrect":true}]},{"question":"Scenario: Your application requires persistent storage with high I/O performance. Which access mode should you consider for the PersistentVolume?","answers":[{"text":"ReadWriteOnce","isCorrect":true},{"text":"ReadOnlyMany","isCorrect":false},{"text":"ReadWriteMany","isCorrect":false},{"text":"SingleUseOnly","isCorrect":false}]},{"question":"Scenario: You want to limit the size of a PersistentVolume that can be requested by a Pod. What Kubernetes resource should you configure?","answers":[{"text":"ResourceQuota","isCorrect":false},{"text":"Pod","isCorrect":false},{"text":"PersistentVolume","isCorrect":false},{"text":"StorageClass","isCorrect":true}]},{"question":"Scenario: You have a stateful application that requires a specific amount of storage. How can you ensure that each Pod gets its own dedicated PersistentVolume?","answers":[{"text":"StorageClass","isCorrect":false},{"text":"volumeName in PersistentVolumeClaim","isCorrect":false},{"text":"StatefulSet with a PersistentVolumeClaim template","isCorrect":true},{"text":"Node affinity in PersistentVolume","isCorrect":false}]},{"question":"Scenario: Your application needs to share data between Pods in a read-only manner. What access mode should you use for the PersistentVolume?","answers":[{"text":"ReadWriteOnce","isCorrect":false},{"text":"ReadOnlyMany","isCorrect":true},{"text":"ReadWriteMany","isCorrect":false},{"text":"SingleUseOnly","isCorrect":false}]},{"question":"Scenario: You want to use local storage on a specific node for your application. What should you include in the PersistentVolume specification?","answers":[{"text":"local","isCorrect":true},{"text":"nodeSelector","isCorrect":false},{"text":"storageClassName","isCorrect":false},{"text":"PersistentVolumeClaim","isCorrect":false}]},{"question":"Scenario: Your application requires storage that persists even if the Pod is evicted. What should you set in the PersistentVolume specification?","answers":[{"text":"persistentVolumeReclaimPolicy","isCorrect":false},{"text":"reclaimPolicy","isCorrect":false},{"text":"persistentVolumeRecycle","isCorrect":false},{"text":"persistentVolumeReclaim","isCorrect":true}]},{"question":"Scenario: You need to ensure that a PersistentVolume is automatically reclaimed when the associated PersistentVolumeClaim is deleted. What should you set in the PersistentVolume specification?","answers":[{"text":"persistentVolumeReclaimPolicy","isCorrect":true},{"text":"reclaimPolicy","isCorrect":false},{"text":"persistentVolumeRecycle","isCorrect":false},{"text":"persistentVolumeReclaim","isCorrect":false}]},{"question":"Scenario: Your application requires shared storage with read-write access across multiple Pods. What access mode should you use for the PersistentVolume?","answers":[{"text":"ReadWriteOnce","isCorrect":false},{"text":"ReadOnlyMany","isCorrect":false},{"text":"ReadWriteMany","isCorrect":true},{"text":"SingleUseOnly","isCorrect":false}]},{"question":"Scenario: You want to use network-attached storage for your application and need to specify the server address. What field should you include in the PersistentVolume specification?","answers":[{"text":"nfs.server","isCorrect":true},{"text":"nfs.path","isCorrect":false},{"text":"nfs.address","isCorrect":false},{"text":"nfs.hostname","isCorrect":false}]},{"question":"Scenario: Your application requires a specific type of storage, and you want to enforce this policy in the PersistentVolumeClaim. What should you include in the PersistentVolumeClaim specification?","answers":[{"text":"volumeType","isCorrect":false},{"text":"StorageClass","isCorrect":true},{"text":"volumeName","isCorrect":false},{"text":"persistentVolumeReclaimPolicy","isCorrect":false}]},{"question":"Scenario: You have a stateful application with a high-availability requirement. How can you ensure that Pods are scheduled on separate nodes while using PersistentVolumes?","answers":[{"text":"Pod affinity","isCorrect":false},{"text":"StatefulSet anti-affinity rules","isCorrect":true},{"text":"PersistentVolumeClaim template","isCorrect":false},{"text":"Node affinity","isCorrect":false}]},{"question":"Scenario: Your application requires storage with low-latency access, and you want to use local storage. What should you include in the PersistentVolume specification?","answers":[{"text":"local","isCorrect":true},{"text":"nodeSelector","isCorrect":false},{"text":"storageClassName","isCorrect":false},{"text":"PersistentVolumeClaim","isCorrect":false}]},{"question":"Scenario: You have a stateful application that requires specific node placement for its PersistentVolumes. What should you configure in the PersistentVolume specification?","answers":[{"text":"nodeAffinity","isCorrect":true},{"text":"nodeSelector","isCorrect":false},{"text":"podAffinity","isCorrect":false},{"text":"podAntiAffinity","isCorrect":false}]},{"question":"Scenario: Your application requires persistent storage, and you want to prevent automatic provisioning of PersistentVolumes. What should you set in the PersistentVolume specification?","answers":[{"text":"storageClassName","isCorrect":false},{"text":"nodeAffinity","isCorrect":false},{"text":"persistentVolumeReclaimPolicy","isCorrect":true},{"text":"volumeName","isCorrect":false}]},{"question":"Scenario: Your application needs to dynamically allocate storage, and you want to enforce a specific storage class. What Kubernetes resource should you create?","answers":[{"text":"Pod","isCorrect":false},{"text":"PersistentVolume","isCorrect":false},{"text":"StorageClass","isCorrect":true},{"text":"PersistentVolumeClaim","isCorrect":false}]},{"question":"Scenario: You need to restrict the maximum size of a PersistentVolumeClaim that can be created by a Pod. What Kubernetes resource should you configure?","answers":[{"text":"ResourceQuota","isCorrect":true},{"text":"Pod","isCorrect":false},{"text":"PersistentVolume","isCorrect":false},{"text":"StorageClass","isCorrect":false}]},{"question":"Scenario: Your application requires shared storage with read-only access across multiple Pods. What access mode should you use for the PersistentVolume?","answers":[{"text":"ReadWriteOnce","isCorrect":false},{"text":"ReadOnlyMany","isCorrect":true},{"text":"ReadWriteMany","isCorrect":false},{"text":"SingleUseOnly","isCorrect":false}]},{"question":"Scenario: You want to ensure that a specific PersistentVolume is always associated with a Pod, even after rescheduling or restarts. What should you use?","answers":[{"text":"Pod affinity","isCorrect":false},{"text":"StatefulSet","isCorrect":true},{"text":"PersistentVolumeClaim template","isCorrect":false},{"text":"Node affinity","isCorrect":false}]},{"question":"Scenario: Your application requires storage that can be dynamically provisioned based on specific requirements. What Kubernetes resource should you create?","answers":[{"text":"Pod","isCorrect":false},{"text":"PersistentVolume","isCorrect":false},{"text":"StorageClass","isCorrect":true},{"text":"PersistentVolumeClaim","isCorrect":false}]},{"question":"Scenario: You have a stateful application with specific node affinity requirements for its PersistentVolumes. What should you configure in the PersistentVolumeClaim template?","answers":[{"text":"podAffinity","isCorrect":false},{"text":"nodeSelector","isCorrect":true},{"text":"persistentVolumeClaimTemplate","isCorrect":false},{"text":"podAntiAffinity","isCorrect":false}]},{"question":"Scenario: Your application requires high-performance storage with exclusive access to a single Pod. What access mode should you consider for the PersistentVolume?","answers":[{"text":"ReadWriteOnce","isCorrect":true},{"text":"ReadOnlyMany","isCorrect":false},{"text":"ReadWriteMany","isCorrect":false},{"text":"SingleUseOnly","isCorrect":false}]},{"question":"Scenario: You want to use a specific storage class for dynamically provisioning PersistentVolumes based on specific requirements. What Kubernetes resource should you create?","answers":[{"text":"Pod","isCorrect":false},{"text":"PersistentVolumeClaim","isCorrect":false},{"text":"StorageClass","isCorrect":true},{"text":"PersistentVolume","isCorrect":false}]}]')}}]);