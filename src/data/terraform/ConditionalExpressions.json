[
    {
      "question": "What does the following Terraform conditional expression do? `var.environment == \\\"production\\\" ? true : false`",
      "answers": [
        { "text": "Checks if the environment variable is set to production and returns true if it is", "isCorrect": true },
        { "text": "Always returns true", "isCorrect": false },
        { "text": "Always returns false", "isCorrect": false },
        { "text": "Checks if the environment variable is set to development and returns true if it is", "isCorrect": false }
      ]
    },
    {
      "question": "In Terraform, what does the following conditional expression evaluate to? `count.index % 2 == 0 ? true : false`",
      "answers": [
        { "text": "Returns true for even indices and false for odd indices", "isCorrect": true },
        { "text": "Always returns true", "isCorrect": false },
        { "text": "Always returns false", "isCorrect": false },
        { "text": "Returns true for odd indices and false for even indices", "isCorrect": false }
      ]
    },
    {
      "question": "What does the following Terraform conditional expression do? `var.instance_type == \\\"t2.micro\\\" ? \\\"small\\\" : \\\"large\\\"`",
      "answers": [
        { "text": "Returns 'small' if the instance type is t2.micro, otherwise 'large'", "isCorrect": true },
        { "text": "Always returns 'small'", "isCorrect": false },
        { "text": "Always returns 'large'", "isCorrect": false },
        { "text": "Returns 'large' if the instance type is t2.micro, otherwise 'small'", "isCorrect": false }
      ]
    },
    {
      "question": "In Terraform, what is the result of the following conditional expression? `var.environment != \\\"development\\\" ? 8080 : 3000`",
      "answers": [
        { "text": "Returns 8080 if the environment is not development, otherwise returns 3000", "isCorrect": true },
        { "text": "Always returns 8080", "isCorrect": false },
        { "text": "Always returns 3000", "isCorrect": false },
        { "text": "Returns 3000 if the environment is not development, otherwise returns 8080", "isCorrect": false }
      ]
    },
    {
      "question": "What does the following Terraform conditional expression do? `var.region == \\\"us-west-1\\\" ? \\\"us-west-1\\\" : \\\"us-east-1\\\"`",
      "answers": [
        { "text": "Returns 'us-west-1' if the region is us-west-1, otherwise 'us-east-1'", "isCorrect": true },
        { "text": "Always returns 'us-west-1'", "isCorrect": false },
        { "text": "Always returns 'us-east-1'", "isCorrect": false },
        { "text": "Returns 'us-east-1' if the region is us-west-1, otherwise 'us-west-1'", "isCorrect": false }
      ]
    },
    {
      "question": "In Terraform, what does the following conditional expression evaluate to? `var.environment == \\\"production\\\" && var.region == \\\"us-east-1\\\" ? true : false`",
      "answers": [
        { "text": "Returns true if the environment is production and the region is us-east-1", "isCorrect": true },
        { "text": "Always returns true", "isCorrect": false },
        { "text": "Always returns false", "isCorrect": false },
        { "text": "Returns true if the environment is production or the region is us-east-1", "isCorrect": false }
      ]
    },
    {
      "question": "What does the following Terraform conditional expression do? `var.instance_type == \\\"t2.micro\\\" && var.environment == \\\"production\\\" ? \\\"small\\\" : \\\"large\\\"`",
      "answers": [
        { "text": "Returns 'small' if the instance type is t2.micro and the environment is production, otherwise 'large'", "isCorrect": true },
        { "text": "Always returns 'small'", "isCorrect": false },
        { "text": "Always returns 'large'", "isCorrect": false },
        { "text": "Returns 'large' if the instance type is t2.micro and the environment is production, otherwise 'small'", "isCorrect": false }
      ]
    },
    {
      "question": "In Terraform, what is the result of the following conditional expression? `var.environment != \\\"development\\\" && var.region == \\\"us-west-2\\\" ? 8080 : 3000`",
      "answers": [
        { "text": "Returns 8080 if the environment is not development and the region is us-west-2, otherwise returns 3000", "isCorrect": true },
        { "text": "Always returns 8080", "isCorrect": false },
        { "text": "Always returns 3000", "isCorrect": false },
        { "text": "Returns 3000 if the environment is not development and the region is us-west-2, otherwise returns 8080", "isCorrect": false }
      ]
    },
    {
      "question": "What does the following Terraform conditional expression do? `var.tier == \\\"production\\\" || var.tier == \\\"staging\\\" ? \\\"high-performance\\\" : \\\"standard\\\"`",
      "answers": [
        { "text": "Returns 'high-performance' if the tier is production or staging, otherwise 'standard'", "isCorrect": true },
        { "text": "Always returns 'high-performance'", "isCorrect": false },
        { "text": "Always returns 'standard'", "isCorrect": false },
        { "text": "Returns 'standard' if the tier is production or staging, otherwise 'high-performance'", "isCorrect": false }
      ]
    },
    {
      "question": "In Terraform, what does the following conditional expression evaluate to? `var.environment == \\\"production\\\" && (var.region == \\\"us-east-1\\\" || var.region == \\\"us-west-1\\\") ? true : false`",
      "answers": [
        { "text": "Returns true if the environment is production and the region is us-east-1 or us-west-1", "isCorrect": true },
        { "text": "Always returns true", "isCorrect": false },
        { "text": "Always returns false", "isCorrect": false },
        { "text": "Returns true if the environment is production and the region is us-east-1", "isCorrect": false }
      ]
    },
    {
      "question": "What does the following Terraform conditional expression do? `var.instance_type == \\\"t2.micro\\\" ? \\\"small\\\" : var.instance_type == \\\"t3.micro\\\" ? \\\"medium\\\" : \\\"large\\\"`",
      "answers": [
        { "text": "Returns 'small' if the instance type is t2.micro, 'medium' if it is t3.micro, otherwise 'large'", "isCorrect": true },
        { "text": "Always returns 'small'", "isCorrect": false },
        { "text": "Always returns 'medium'", "isCorrect": false },
        { "text": "Always returns 'large'", "isCorrect": false }
      ]
    },
    {
      "question": "In Terraform, what is the result of the following conditional expression? `var.environment == \\\"production\\\" ? var.region == \\\"us-west-1\\\" ? \\\"high\\\" : \\\"medium\\\" : \\\"low\\\"`",
      "answers": [
        { "text": "Returns 'high' if the environment is production and the region is us-west-1, 'medium' if the environment is production but the region is not us-west-1, otherwise 'low'", "isCorrect": true },
        { "text": "Always returns 'high'", "isCorrect": false },
        { "text": "Always returns 'medium'", "isCorrect": false },
        { "text": "Always returns 'low'", "isCorrect": false }
      ]
    },
    {
      "question": "What does the following Terraform conditional expression do? `var.environment == \\\"production\\\" && var.region == \\\"us-west-1\\\" ? \\\"high\\\" : var.environment == \\\"staging\\\" ? \\\"medium\\\" : \\\"low\\\"`",
      "answers": [
        { "text": "Returns 'high' if the environment is production and the region is us-west-1, 'medium' if the environment is staging, otherwise 'low'", "isCorrect": true },
        { "text": "Always returns 'high'", "isCorrect": false },
        { "text": "Always returns 'medium'", "isCorrect": false },
        { "text": "Always returns 'low'", "isCorrect": false }
      ]
    },
    {
      "question": "In Terraform, what does the following conditional expression evaluate to? `var.environment == \\\"production\\\" ? \\\"large\\\" : var.environment == \\\"staging\\\" ? \\\"medium\\\" : \\\"small\\\"`",
      "answers": [
        { "text": "Returns 'large' if the environment is production, 'medium' if the environment is staging, otherwise 'small'", "isCorrect": true },
        { "text": "Always returns 'large'", "isCorrect": false },
        { "text": "Always returns 'medium'", "isCorrect": false },
        { "text": "Always returns 'small'", "isCorrect": false }
      ]
    },
    {
      "question": "What does the following Terraform conditional expression do? `var.environment == \\\"production\\\" && var.region == \\\"us-west-1\\\" ? \\\"high\\\" : var.region == \\\"us-east-1\\\" ? \\\"medium\\\" : \\\"low\\\"`",
      "answers": [
        { "text": "Returns 'high' if the environment is production and the region is us-west-1, 'medium' if the region is us-east-1, otherwise 'low'", "isCorrect": true },
        { "text": "Always returns 'high'", "isCorrect": false },
        { "text": "Always returns 'medium'", "isCorrect": false },
        { "text": "Always returns 'low'", "isCorrect": false }
      ]
    },
    {
      "question": "In Terraform, what is the result of the following conditional expression? `var.environment == \\\"production\\\" && var.region == \\\"us-west-1\\\" ? \\\"large\\\" : var.environment == \\\"staging\\\" && var.region == \\\"us-east-1\\\" ? \\\"medium\\\" : \\\"small\\\"`",
      "answers": [
        { "text": "Returns 'large' if the environment is production and the region is us-west-1, 'medium' if the environment is staging and the region is us-east-1, otherwise 'small'", "isCorrect": true },
        { "text": "Always returns 'large'", "isCorrect": false },
        { "text": "Always returns 'medium'", "isCorrect": false },
        { "text": "Always returns 'small'", "isCorrect": false }
      ]
    },
    {
      "question": "Scenario: You want to conditionally create an AWS EC2 instance only if a variable named 'create_instance' is set to true. Which Terraform conditional expression should you use?",
      "answers": [
        { "text": "if var.create_instance == true", "isCorrect": false },
        { "text": "var.create_instance ? true : false", "isCorrect": false },
        { "text": "var.create_instance ? resource \"aws_instance\" \"example\" {} : null", "isCorrect": true },
        { "text": "resource \"aws_instance\" \"example\" { if var.create_instance }", "isCorrect": false }
      ]
    },
    {
      "question": "Scenario: You need to conditionally set the 'instance_type' attribute of an AWS EC2 instance. The instance type should be 't2.micro' if the variable 'small_instance' is true; otherwise, it should be 't2.large'. What Terraform conditional expression is appropriate?",
      "answers": [
        { "text": "var.small_instance ? \"t2.micro\" : \"t2.large\"", "isCorrect": true },
        { "text": "if var.small_instance { \"t2.micro\" } else { \"t2.large\" }", "isCorrect": false },
        { "text": "var.small_instance == true ? \"t2.micro\" : \"t2.large\"", "isCorrect": false },
        { "text": "resource \"aws_instance\" \"example\" { instance_type = var.small_instance ? \"t2.micro\" : \"t2.large\" }", "isCorrect": false }
      ]
    },
    {
      "question": "Scenario: You want to create an AWS S3 bucket only if a variable 'create_bucket' is set to true. Which Terraform conditional expression is correct?",
      "answers": [
        { "text": "var.create_bucket ? resource \"aws_s3_bucket\" \"example\" {} : null", "isCorrect": true },
        { "text": "resource \"aws_s3_bucket\" \"example\" { if var.create_bucket }", "isCorrect": false },
        { "text": "if var.create_bucket { resource \"aws_s3_bucket\" \"example\" {} }", "isCorrect": false },
        { "text": "var.create_bucket ? { resource \"aws_s3_bucket\" \"example\" {} } : null", "isCorrect": false }
      ]
    },
    {
      "question": "Scenario: You need to conditionally set the 'enabled' attribute of a Google Cloud Pub/Sub subscription. If the variable 'enable_subscription' is true, the subscription should be enabled; otherwise, it should be disabled. Which Terraform conditional expression is appropriate?",
      "answers": [
        { "text": "var.enable_subscription ? true : false", "isCorrect": true },
        { "text": "var.enable_subscription == true ? true : false", "isCorrect": false },
        { "text": "if var.enable_subscription { true } else { false }", "isCorrect": false },
        { "text": "resource \"google_pubsub_subscription\" \"example\" { enabled = var.enable_subscription }", "isCorrect": false }
      ]
    },
    {
      "question": "Scenario: You want to set the 'subnet_id' attribute of an AWS EC2 instance based on the value of the 'use_default_subnet' variable. If 'use_default_subnet' is true, 'subnet_id' should be set to 'subnet-123'; otherwise, it should be set to 'subnet-456'. What Terraform conditional expression is correct?",
      "answers": [
        { "text": "var.use_default_subnet ? \"subnet-123\" : \"subnet-456\"", "isCorrect": true },
        { "text": "if var.use_default_subnet { \"subnet-123\" } else { \"subnet-456\" }", "isCorrect": false },
        { "text": "var.use_default_subnet == true ? \"subnet-123\" : \"subnet-456\"", "isCorrect": false },
        { "text": "resource \"aws_instance\" \"example\" { subnet_id = var.use_default_subnet ? \"subnet-123\" : \"subnet-456\" }", "isCorrect": false }
      ]
    },
    {
      "question": "Scenario: You want to create a Google Cloud Storage bucket only if the variable 'enable_bucket' is set to true. What Terraform conditional expression should you use?",
      "answers": [
        { "text": "resource \"google_storage_bucket\" \"example\" { if var.enable_bucket }", "isCorrect": false },
        { "text": "var.enable_bucket ? resource \"google_storage_bucket\" \"example\" {} : null", "isCorrect": true },
        { "text": "if var.enable_bucket { resource \"google_storage_bucket\" \"example\" {} }", "isCorrect": false },
        { "text": "var.enable_bucket ? { resource \"google_storage_bucket\" \"example\" {} } : null", "isCorrect": false }
      ]
    },
    {
      "question": "Scenario: You need to set the 'size' attribute of an AWS EBS volume based on the value of the 'use_large_volume' variable. If 'use_large_volume' is true, 'size' should be set to 100; otherwise, it should be set to 50. What Terraform conditional expression is correct?",
      "answers": [
        { "text": "var.use_large_volume ? 100 : 50", "isCorrect": true },
        { "text": "if var.use_large_volume { 100 } else { 50 }", "isCorrect": false },
        { "text": "var.use_large_volume == true ? 100 : 50", "isCorrect": false },
        { "text": "resource \"aws_ebs_volume\" \"example\" { size = var.use_large_volume ? 100 : 50 }", "isCorrect": false }
      ]
    },
    {
      "question": "Scenario: You want to conditionally create an Azure virtual machine only if the variable 'deploy_vm' is set to true. What Terraform conditional expression should you use?",
      "answers": [
        { "text": "if var.deploy_vm { resource \"azurerm_virtual_machine\" \"example\" {} }", "isCorrect": false },
        { "text": "var.deploy_vm ? resource \"azurerm_virtual_machine\" \"example\" {} : null", "isCorrect": true },
        { "text": "var.deploy_vm == true ? resource \"azurerm_virtual_machine\" \"example\" {} : null", "isCorrect": false },
        { "text": "resource \"azurerm_virtual_machine\" \"example\" { if var.deploy_vm }", "isCorrect": false }
      ]
    },
    {
      "question": "Scenario: You need to set the 'public' attribute of a Google Cloud Storage bucket based on the value of the 'make_public' variable. If 'make_public' is true, 'public' should be set to true; otherwise, it should be set to false. What Terraform conditional expression is correct?",
      "answers": [
        { "text": "var.make_public ? true : false", "isCorrect": true },
        { "text": "if var.make_public { true } else { false }", "isCorrect": false },
        { "text": "var.make_public == true ? true : false", "isCorrect": false },
        { "text": "resource \"google_storage_bucket\" \"example\" { public = var.make_public }", "isCorrect": false }
      ]
    },
    {
      "question": "Scenario: You want to conditionally set the 'environment' attribute of an AWS Lambda function. If the variable 'prod_environment' is true, 'environment' should be set to 'production'; otherwise, it should be set to 'development'. What Terraform conditional expression is appropriate?",
      "answers": [
        { "text": "var.prod_environment ? \"production\" : \"development\"", "isCorrect": true },
        { "text": "if var.prod_environment { \"production\" } else { \"development\" }", "isCorrect": false },
        { "text": "var.prod_environment == true ? \"production\" : \"development\"", "isCorrect": false },
        { "text": "resource \"aws_lambda_function\" \"example\" { environment = var.prod_environment ? \"production\" : \"development\" }", "isCorrect": false }
      ]
    },
    {
      "question": "Scenario: You need to conditionally set the 'sku' attribute of an Azure resource. If the variable 'use_premium_sku' is true, 'sku' should be set to 'premium'; otherwise, it should be set to 'standard'. What Terraform conditional expression is correct?",
      "answers": [
        { "text": "var.use_premium_sku ? \"premium\" : \"standard\"", "isCorrect": true },
        { "text": "if var.use_premium_sku { \"premium\" } else { \"standard\" }", "isCorrect": false },
        { "text": "var.use_premium_sku == true ? \"premium\" : \"standard\"", "isCorrect": false },
        { "text": "resource \"azurerm_resource\" \"example\" { sku = var.use_premium_sku ? \"premium\" : \"standard\" }", "isCorrect": false }
      ]
    },
    {
      "question": "Scenario: You want to conditionally create a Google Cloud Compute Engine instance only if the variable 'deploy_instance' is set to true. Which Terraform conditional expression should you use?",
      "answers": [
        { "text": "resource \"google_compute_instance\" \"example\" { if var.deploy_instance }", "isCorrect": false },
        { "text": "var.deploy_instance == true ? resource \"google_compute_instance\" \"example\" {} : null", "isCorrect": true },
        { "text": "if var.deploy_instance { resource \"google_compute_instance\" \"example\" {} }", "isCorrect": false },
        { "text": "var.deploy_instance ? { resource \"google_compute_instance\" \"example\" {} } : null", "isCorrect": false }
      ]
    },
    {
      "question": "Scenario: You need to set the 'size' attribute of an AWS RDS instance based on the value of the 'use_large_instance' variable. If 'use_large_instance' is true, 'size' should be set to 'db.m5.large'; otherwise, it should be set to 'db.t3.micro'. What Terraform conditional expression is correct?",
      "answers": [
        { "text": "var.use_large_instance ? \"db.m5.large\" : \"db.t3.micro\"", "isCorrect": true },
        { "text": "if var.use_large_instance { \"db.m5.large\" } else { \"db.t3.micro\" }", "isCorrect": false },
        { "text": "var.use_large_instance == true ? \"db.m5.large\" : \"db.t3.micro\"", "isCorrect": false },
        { "text": "resource \"aws_db_instance\" \"example\" { size = var.use_large_instance ? \"db.m5.large\" : \"db.t3.micro\" }", "isCorrect": false }
      ]
    },
    {
      "question": "Scenario: You want to set the 'public_access' attribute of an Azure Storage Account based on the value of the 'allow_public_access' variable. If 'allow_public_access' is true, 'public_access' should be set to 'Enabled'; otherwise, it should be set to 'Disabled'. What Terraform conditional expression is appropriate?",
      "answers": [
        { "text": "var.allow_public_access ? \"Enabled\" : \"Disabled\"", "isCorrect": true },
        { "text": "if var.allow_public_access { \"Enabled\" } else { \"Disabled\" }", "isCorrect": false },
        { "text": "var.allow_public_access == true ? \"Enabled\" : \"Disabled\"", "isCorrect": false },
        { "text": "resource \"azurerm_storage_account\" \"example\" { public_access = var.allow_public_access ? \"Enabled\" : \"Disabled\" }", "isCorrect": false }
      ]
    }
]
  