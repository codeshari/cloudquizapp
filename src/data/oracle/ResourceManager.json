[
    {
      "question": "What is Oracle Cloud Infrastructure (OCI) Resource Manager used for?",
      "answers": [
        { "text": "To manage Oracle databases", "isCorrect": false },
        { "text": "To deploy and manage infrastructure as code", "isCorrect": true },
        { "text": "To analyze and visualize data", "isCorrect": false },
        { "text": "To create virtual machines", "isCorrect": false }
      ]
    },
    {
      "question": "Which language is commonly used for defining stacks in OCI Resource Manager?",
      "answers": [
        { "text": "JavaScript", "isCorrect": false },
        { "text": "Python", "isCorrect": false },
        { "text": "Terraform", "isCorrect": true },
        { "text": "Java", "isCorrect": false }
      ]
    },
    {
      "question": "What is a Stack in OCI Resource Manager?",
      "answers": [
        { "text": "A group of virtual machines", "isCorrect": false },
        { "text": "A collection of networking components", "isCorrect": false },
        { "text": "A set of resources defined by a Terraform configuration", "isCorrect": true },
        { "text": "A database instance", "isCorrect": false }
      ]
    },
    {
      "question": "Which OCI Resource Manager component is responsible for executing Terraform configurations?",
      "answers": [
        { "text": "Stack", "isCorrect": false },
        { "text": "Job", "isCorrect": true },
        { "text": "Template", "isCorrect": false },
        { "text": "Compartment", "isCorrect": false }
      ]
    },
    {
      "question": "What is the purpose of a Resource Manager Template in OCI?",
      "answers": [
        { "text": "To create virtual machines", "isCorrect": false },
        { "text": "To define the structure and properties of the stack", "isCorrect": true },
        { "text": "To manage DNS settings", "isCorrect": false },
        { "text": "To analyze and visualize data", "isCorrect": false }
      ]
    },
    {
      "question": "What is an OCI Resource Manager Job?",
      "answers": [
        { "text": "A physical server in the Oracle Cloud", "isCorrect": false },
        { "text": "A task that performs an operation on a stack or resource", "isCorrect": true },
        { "text": "A type of database instance", "isCorrect": false },
        { "text": "A virtual machine in the Oracle Cloud", "isCorrect": false }
      ]
    },
    {
      "question": "How can you provide input parameters to an OCI Resource Manager stack?",
      "answers": [
        { "text": "Only through the OCI Console", "isCorrect": false },
        { "text": "Only through the REST API", "isCorrect": false },
        { "text": "Through the OCI Console or API, or by specifying them in the Terraform configuration", "isCorrect": true },
        { "text": "Only through the Resource Manager CLI", "isCorrect": false }
      ]
    },
    {
      "question": "What is the purpose of the 'terraform.tfstate' file in OCI Resource Manager?",
      "answers": [
        { "text": "To store Terraform binary executable", "isCorrect": false },
        { "text": "To store configuration settings for the Resource Manager service", "isCorrect": false },
        { "text": "To store the current state of the infrastructure as defined in the Terraform configuration", "isCorrect": true },
        { "text": "To store job logs", "isCorrect": false }
      ]
    },
    {
      "question": "How can you delete a stack in OCI Resource Manager?",
      "answers": [
        { "text": "Only through the OCI Console", "isCorrect": false },
        { "text": "Only through the REST API", "isCorrect": false },
        { "text": "Through the OCI Console or API", "isCorrect": true },
        { "text": "Only through the Resource Manager CLI", "isCorrect": false }
      ]
    },
    {
      "question": "What is the purpose of the Resource Manager Terraform CLI?",
      "answers": [
        { "text": "To manage Oracle databases", "isCorrect": false },
        { "text": "To manage DNS settings", "isCorrect": false },
        { "text": "To execute Terraform commands on a local machine", "isCorrect": true },
        { "text": "To create virtual machines", "isCorrect": false }
      ]
    },
    {
      "question": "What is an OCI Resource Manager Stack Version?",
      "answers": [
        { "text": "A specific version of the Terraform binary", "isCorrect": false },
        { "text": "A snapshot of a stack at a specific point in time", "isCorrect": true },
        { "text": "A version of the OCI Resource Manager service", "isCorrect": false },
        { "text": "A type of database instance", "isCorrect": false }
      ]
    },
    {
      "question": "How can you roll back a stack in OCI Resource Manager to a previous version?",
      "answers": [
        { "text": "By manually editing the Terraform configuration", "isCorrect": false },
        { "text": "By recreating the stack from a previous version", "isCorrect": true },
        { "text": "By deleting the stack and recreating it", "isCorrect": false },
        { "text": "By contacting Oracle support", "isCorrect": false }
      ]
    },
    {
      "question": "What is the purpose of Resource Manager Stack Policies?",
      "answers": [
        { "text": "To manage DNS settings", "isCorrect": false },
        { "text": "To define who can make changes to specific resources within a stack", "isCorrect": true },
        { "text": "To create virtual machines", "isCorrect": false },
        { "text": "To define the structure and properties of the stack", "isCorrect": false }
      ]
    },
    {
      "question": "How can you monitor the progress of a Resource Manager Job?",
      "answers": [
        { "text": "Only through the OCI Console", "isCorrect": false },
        { "text": "Only through the REST API", "isCorrect": false },
        { "text": "Through the OCI Console or API, and by viewing job logs", "isCorrect": true },
        { "text": "Only through the Resource Manager CLI", "isCorrect": false }
      ]
    },
    {
      "question": "What is the purpose of Resource Manager Job Logs?",
      "answers": [
        { "text": "To manage DNS settings", "isCorrect": false },
        { "text": "To store configuration settings", "isCorrect": false },
        { "text": "To provide a detailed record of a job's execution", "isCorrect": true },
        { "text": "To create virtual machines", "isCorrect": false }
      ]
    },
    {
      "question": "What is the significance of Terraform Providers in OCI Resource Manager?",
      "answers": [
        { "text": "They provide DNS resolution services", "isCorrect": false },
        { "text": "They are specific to the Oracle Cloud Infrastructure platform and allow Terraform to interact with OCI resources", "isCorrect": true },
        { "text": "They are responsible for load balancing", "isCorrect": false },
        { "text": "They manage storage resources", "isCorrect": false }
      ]
    },
    {
      "question": "Which OCI Resource Manager feature enables you to share stacks across compartments?",
      "answers": [
        { "text": "Stack Policies", "isCorrect": false },
        { "text": "Compartments", "isCorrect": false },
        { "text": "Stack Sharing", "isCorrect": true },
        { "text": "Resource Manager CLI", "isCorrect": false }
      ]
    },
    {
      "question": "What is the purpose of the 'terraform.tfvars' file in OCI Resource Manager?",
      "answers": [
        { "text": "To store configuration settings", "isCorrect": false },
        { "text": "To define Terraform variables and values", "isCorrect": true },
        { "text": "To manage DNS settings", "isCorrect": false },
        { "text": "To create virtual machines", "isCorrect": false }
      ]
    },
    {
      "question": "How can you define dependencies between resources in a Terraform configuration?",
      "answers": [
        { "text": "By using Oracle-specific tags", "isCorrect": false },
        { "text": "By specifying dependencies in the Resource Manager template", "isCorrect": false },
        { "text": "By declaring dependencies in the Terraform configuration", "isCorrect": true },
        { "text": "By contacting Oracle support", "isCorrect": false }
      ]
    },
    {
      "question": "What is the purpose of the Resource Manager Plan?",
      "answers": [
        { "text": "To manage DNS settings", "isCorrect": false },
        { "text": "To simulate and review changes before they are applied to the stack", "isCorrect": true },
        { "text": "To create virtual machines", "isCorrect": false },
        { "text": "To store Terraform binary executable", "isCorrect": false }
      ]
    },
    {
      "question": "What is the purpose of the 'variables.tf' file in OCI Resource Manager?",
      "answers": [
        { "text": "To manage DNS settings", "isCorrect": false },
        { "text": "To define Terraform variables and values", "isCorrect": true },
        { "text": "To store configuration settings", "isCorrect": false },
        { "text": "To create virtual machines", "isCorrect": false }
      ]
    },
    {
      "question": "Which OCI Resource Manager feature enables you to update existing stacks?",
      "answers": [
        { "text": "Stack Sharing", "isCorrect": false },
        { "text": "Resource Manager CLI", "isCorrect": false },
        { "text": "Stack Updates", "isCorrect": true },
        { "text": "Stack Policies", "isCorrect": false }
      ]
    },
    {
      "question": "What is the purpose of the 'outputs.tf' file in OCI Resource Manager?",
      "answers": [
        { "text": "To store configuration settings", "isCorrect": false },
        { "text": "To define Terraform variables and values", "isCorrect": false },
        { "text": "To create virtual machines", "isCorrect": false },
        { "text": "To define values that can be queried and displayed after stack creation", "isCorrect": true }
      ]
    },
    {
      "question": "How does OCI Resource Manager handle changes to the Terraform configuration?",
      "answers": [
        { "text": "Changes are applied immediately without review", "isCorrect": false },
        { "text": "Changes are applied only after manual approval in the OCI Console", "isCorrect": false },
        { "text": "Changes are reviewed and simulated using a plan before applying", "isCorrect": true },
        { "text": "Changes are rejected by default", "isCorrect": false }
      ]
    },
    {
      "question": "What is the purpose of Resource Manager Stack Variables?",
      "answers": [
        { "text": "To store configuration settings", "isCorrect": false },
        { "text": "To define Terraform variables and values", "isCorrect": false },
        { "text": "To create virtual machines", "isCorrect": false },
        { "text": "To define variables specific to a stack that can be overridden during stack creation", "isCorrect": true }
      ]
    },
    {
      "question": "Which OCI Resource Manager feature allows you to automate the creation of stacks?",
      "answers": [
        { "text": "Stack Updates", "isCorrect": false },
        { "text": "Resource Manager CLI", "isCorrect": true },
        { "text": "Stack Policies", "isCorrect": false },
        { "text": "Stack Sharing", "isCorrect": false }
      ]
    },
    {
      "question": "What is the purpose of Resource Manager Job History?",
      "answers": [
        { "text": "To store configuration settings", "isCorrect": false },
        { "text": "To manage DNS settings", "isCorrect": false },
        { "text": "To provide a historical record of job executions", "isCorrect": true },
        { "text": "To create virtual machines", "isCorrect": false }
      ]
    },
    {
      "question": "How can you share a stack with another OCI tenancy in Resource Manager?",
      "answers": [
        { "text": "Only through the OCI Console", "isCorrect": false },
        { "text": "Only through the REST API", "isCorrect": false },
        { "text": "Through the OCI Console or API, and by using stack sharing", "isCorrect": true },
        { "text": "Only through the Resource Manager CLI", "isCorrect": false }
      ]
    },
    {
        "question": "Scenario: You are tasked with deploying a multi-tier application in Oracle Cloud. How can Oracle Resource Manager help in this situation?",
        "answers": [
          { "text": "By managing DNS settings", "isCorrect": false },
          { "text": "By automating the deployment of infrastructure as code using Terraform configurations", "isCorrect": true },
          { "text": "By providing a graphical interface for configuring resources", "isCorrect": false },
          { "text": "By creating virtual machines", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: Your team is using Terraform to define and manage Oracle Cloud resources. How can you leverage Resource Manager to streamline this process?",
        "answers": [
          { "text": "By using Oracle Cloud Console for Terraform configuration", "isCorrect": false },
          { "text": "By manually applying Terraform configurations using the CLI", "isCorrect": false },
          { "text": "By using Resource Manager to automate the execution of Terraform configurations", "isCorrect": true },
          { "text": "By managing DNS settings", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: You need to deploy a consistent infrastructure across multiple environments in Oracle Cloud. How can Resource Manager assist in maintaining consistency?",
        "answers": [
          { "text": "By manually configuring resources in each environment", "isCorrect": false },
          { "text": "By using Oracle Cloud Console for environment-specific configurations", "isCorrect": false },
          { "text": "By defining infrastructure as code using Terraform and applying it across environments with Resource Manager", "isCorrect": true },
          { "text": "By creating virtual machines separately in each environment", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: You want to share your infrastructure templates with another Oracle Cloud tenancy. How can you achieve this using Oracle Resource Manager?",
        "answers": [
          { "text": "By exporting and importing templates manually", "isCorrect": false },
          { "text": "By using the Resource Manager CLI only", "isCorrect": false },
          { "text": "By leveraging stack sharing through the Oracle Cloud Console or API", "isCorrect": true },
          { "text": "By managing DNS settings", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: Your team needs to roll back a recent infrastructure change in Oracle Cloud due to issues. How can you revert to a previous state using Resource Manager?",
        "answers": [
          { "text": "By manually undoing changes in the Oracle Cloud Console", "isCorrect": false },
          { "text": "By recreating resources individually", "isCorrect": false },
          { "text": "By rolling back to a previous version of the stack using Resource Manager", "isCorrect": true },
          { "text": "By managing DNS settings", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: You want to customize the behavior of Terraform during the execution of Oracle Resource Manager Jobs. How can you achieve this?",
        "answers": [
          { "text": "By manually modifying Terraform binary settings", "isCorrect": false },
          { "text": "By adjusting Resource Manager job logs in the Oracle Cloud Console", "isCorrect": false },
          { "text": "By providing Terraform command options in the Resource Manager job configuration", "isCorrect": true },
          { "text": "By creating virtual machines with custom configurations", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: Your organization wants to enforce policies regarding who can make changes to specific resources within a stack. How can you implement this in Oracle Resource Manager?",
        "answers": [
          { "text": "By managing DNS settings", "isCorrect": false },
          { "text": "By using Oracle Identity and Access Management (IAM) policies", "isCorrect": false },
          { "text": "By defining and applying stack policies in Resource Manager", "isCorrect": true },
          { "text": "By manually controlling access to each resource in the Oracle Cloud Console", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: Your team is responsible for deploying and managing multiple Oracle Cloud stacks. How can you efficiently automate the creation of these stacks using Resource Manager?",
        "answers": [
          { "text": "By manually creating each stack using the Oracle Cloud Console", "isCorrect": false },
          { "text": "By executing Terraform commands individually for each stack", "isCorrect": false },
          { "text": "By using the Resource Manager CLI to automate stack creation", "isCorrect": true },
          { "text": "By managing DNS settings", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: Your team needs to simulate and review changes before applying them to an Oracle Cloud stack. How can Resource Manager assist in this process?",
        "answers": [
          { "text": "By automatically applying changes without review", "isCorrect": false },
          { "text": "By reviewing job logs after changes have been applied", "isCorrect": false },
          { "text": "By creating virtual machines to test changes separately", "isCorrect": false },
          { "text": "By using the Resource Manager plan to simulate and review changes before applying them", "isCorrect": true }
        ]
      },
      {
        "question": "Scenario: Your team wants to enforce naming conventions for resources within Oracle Cloud stacks. How can you achieve this using Resource Manager?",
        "answers": [
          { "text": "By manually renaming each resource in the Oracle Cloud Console", "isCorrect": false },
          { "text": "By using Oracle Cloud Policies only", "isCorrect": false },
          { "text": "By defining naming conventions in the Terraform configuration and applying them with Resource Manager", "isCorrect": true },
          { "text": "By managing DNS settings", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: Your organization follows a DevOps approach, and you want to integrate Oracle Resource Manager into your CI/CD pipeline. How can you achieve this?",
        "answers": [
          { "text": "By manually triggering Resource Manager jobs from the Oracle Cloud Console", "isCorrect": false },
          { "text": "By managing DNS settings", "isCorrect": false },
          { "text": "By using the Resource Manager API to trigger jobs as part of the CI/CD pipeline", "isCorrect": true },
          { "text": "By creating virtual machines separately in each environment", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: Your team wants to maintain different configurations for development, testing, and production environments. How can you manage these variations efficiently using Oracle Resource Manager?",
        "answers": [
          { "text": "By manually adjusting configurations for each environment in the Oracle Cloud Console", "isCorrect": false },
          { "text": "By using Oracle Cloud Policies to enforce environment-specific configurations", "isCorrect": false },
          { "text": "By leveraging Terraform variables and managing environment-specific values with Resource Manager", "isCorrect": true },
          { "text": "By creating virtual machines with environment-specific configurations", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: Your team needs to collaborate on defining and managing Oracle Cloud infrastructure. How can Resource Manager facilitate collaboration?",
        "answers": [
          { "text": "By sharing Oracle Cloud account credentials", "isCorrect": false },
          { "text": "By manually exporting and importing Terraform configurations", "isCorrect": false },
          { "text": "By using stack sharing to collaborate on stack development across teams", "isCorrect": true },
          { "text": "By managing DNS settings", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: You are tasked with securing sensitive information such as API keys and passwords in your Oracle Cloud Terraform configurations. How can Resource Manager help in managing these secrets?",
        "answers": [
          { "text": "By storing secrets directly in Terraform configurations", "isCorrect": false },
          { "text": "By using Oracle Cloud Console to manage secrets separately", "isCorrect": false },
          { "text": "By leveraging Resource Manager to manage and securely store secrets as variables", "isCorrect": true },
          { "text": "By managing DNS settings", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: Your team needs to maintain documentation and version history for Oracle Cloud stacks. How can you achieve this using Resource Manager?",
        "answers": [
          { "text": "By manually documenting changes in a separate system", "isCorrect": false },
          { "text": "By relying on job logs for version history", "isCorrect": false },
          { "text": "By using Resource Manager to maintain stack documentation and version history", "isCorrect": true },
          { "text": "By creating virtual machines separately in each environment", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: Your organization wants to enforce specific configurations for all Oracle Cloud stacks, such as VCN configurations or security settings. How can you achieve this with Resource Manager?",
        "answers": [
          { "text": "By manually adjusting configurations for each stack in the Oracle Cloud Console", "isCorrect": false },
          { "text": "By using Oracle Cloud Policies only", "isCorrect": false },
          { "text": "By defining standard configurations and enforcing them using Resource Manager templates and policies", "isCorrect": true },
          { "text": "By managing DNS settings", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: Your team needs to integrate existing Oracle Cloud Infrastructure configurations into a Terraform-based workflow. How can you achieve this with Resource Manager?",
        "answers": [
          { "text": "By manually recreating existing configurations using Terraform", "isCorrect": false },
          { "text": "By exporting existing configurations from the Oracle Cloud Console and importing them into Terraform", "isCorrect": false },
          { "text": "By importing existing Oracle Cloud Infrastructure configurations directly into Resource Manager", "isCorrect": true },
          { "text": "By managing DNS settings", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: Your organization follows a hybrid cloud approach, and you need to manage Oracle Cloud and on-premises infrastructure using Terraform. How can Resource Manager assist in this scenario?",
        "answers": [
          { "text": "By using separate tools for Oracle Cloud and on-premises infrastructure management", "isCorrect": false },
          { "text": "By creating virtual machines separately for each environment", "isCorrect": false },
          { "text": "By leveraging Resource Manager to manage both Oracle Cloud and on-premises infrastructure using Terraform", "isCorrect": true },
          { "text": "By managing DNS settings", "isCorrect": false }
        ]
      },
      {
        "question": "Scenario: Your team needs to maintain a library of reusable Terraform modules for Oracle Cloud configurations. How can you organize and manage these modules using Resource Manager?",
        "answers": [
          { "text": "By manually maintaining modules in separate repositories", "isCorrect": false },
          { "text": "By using Oracle Cloud Console to organize modules", "isCorrect": false },
          { "text": "By creating virtual machines with embedded modules", "isCorrect": false },
          { "text": "By using Resource Manager to create and manage a module library", "isCorrect": true }
        ]
      }
]