[
    {
      "question": "You have a microservices application deployed in Kubernetes, and one of the pods is showing a high resource utilization. What would you do to troubleshoot and resolve the issue?",
      "answers": [
        { "text": "Delete and recreate the pod", "isCorrect": false },
        { "text": "Scale the deployment horizontally to distribute the load", "isCorrect": true },
        { "text": "Increase the resource limits in the pod specification", "isCorrect": false },
        { "text": "Restart the Kubernetes cluster", "isCorrect": false }
      ]
    },
    {
      "question": "In a Kubernetes cluster, you need to expose a pod to external traffic. What type of Kubernetes resource would you use for this purpose?",
      "answers": [
        { "text": "Pod", "isCorrect": false },
        { "text": "Service", "isCorrect": true },
        { "text": "Deployment", "isCorrect": false },
        { "text": "PersistentVolume", "isCorrect": false }
      ]
    },
    {
      "question": "You want to update the environment variables in a running pod without redeploying it. What is the recommended approach?",
      "answers": [
        { "text": "Edit the environment variables directly in the pod's YAML file and apply the changes", "isCorrect": false },
        { "text": "Use the 'kubectl edit' command to modify the environment variables in the running pod", "isCorrect": true },
        { "text": "Delete the pod and recreate it with the updated environment variables", "isCorrect": false },
        { "text": "Update the environment variables in the deployment and rollout a new version", "isCorrect": false }
      ]
    },
    {
      "question": "You have a stateful application deployed in Kubernetes, and you need to persist data. What Kubernetes resource would you use?",
      "answers": [
        { "text": "Pod", "isCorrect": false },
        { "text": "Service", "isCorrect": false },
        { "text": "PersistentVolume", "isCorrect": true },
        { "text": "ConfigMap", "isCorrect": false }
      ]
    },
    {
      "question": "In a Kubernetes pod specification, what is the purpose of the 'readinessProbe' and 'livenessProbe' fields?",
      "answers": [
        { "text": "To define resource limits for the pod", "isCorrect": false },
        { "text": "To specify environment variables for the pod", "isCorrect": false },
        { "text": "To check if the pod is ready to receive traffic and if it is alive, respectively", "isCorrect": true },
        { "text": "To define networking rules for the pod", "isCorrect": false }
      ]
    },
    {
      "question": "You have a pod running a web application, and you want to access the logs of the application in real-time. How can you achieve this?",
      "answers": [
        { "text": "Use 'kubectl logs' to view the logs of the pod", "isCorrect": true },
        { "text": "Access the logs directly on the node where the pod is running", "isCorrect": false },
        { "text": "Modify the pod's YAML file to enable real-time logging", "isCorrect": false },
        { "text": "Use 'kubectl exec' to enter the pod and view the logs from within the container", "isCorrect": false }
      ]
    },
    {
      "question": "You have a multi-container pod, and you want to share storage between the containers. What Kubernetes feature would you use?",
      "answers": [
        { "text": "Pod affinity", "isCorrect": false },
        { "text": "Pod anti-affinity", "isCorrect": false },
        { "text": "VolumeMounts", "isCorrect": false },
        { "text": "Volumes", "isCorrect": true }
      ]
    },
    {
      "question": "You need to scale a deployment to handle increased traffic. What Kubernetes command would you use to scale the deployment?",
      "answers": [
        { "text": "kubectl resize", "isCorrect": false },
        { "text": "kubectl scale", "isCorrect": true },
        { "text": "kubectl update", "isCorrect": false },
        { "text": "kubectl deploy", "isCorrect": false }
      ]
    },
    {
      "question": "You want to deploy a pod with a specific version of an application. What Kubernetes resource would you use to achieve this?",
      "answers": [
        { "text": "Pod", "isCorrect": false },
        { "text": "Service", "isCorrect": false },
        { "text": "ReplicaSet", "isCorrect": false },
        { "text": "Deployment", "isCorrect": true }
      ]
    },
    {
      "question": "You have a critical pod that must always run on a node with a GPU. How can you enforce this constraint in Kubernetes?",
      "answers": [
        { "text": "Use pod annotations to specify the required GPU", "isCorrect": false },
        { "text": "Define a node affinity rule for the pod", "isCorrect": true },
        { "text": "Include GPU information in the pod's resource requests", "isCorrect": false },
        { "text": "Manually schedule the pod to a node with a GPU using 'kubectl run'", "isCorrect": false }
      ]
    },
    {
        "question": "You have a pod running in a Kubernetes cluster, and you want to update the container image for the pod without changing the pod's configuration. What is the recommended approach?",
        "answers": [
          { "text": "Edit the pod's YAML file and change the image version, then apply the changes", "isCorrect": false },
          { "text": "Use 'kubectl set image' to update the container image for the pod", "isCorrect": true },
          { "text": "Delete the pod and create a new one with the updated image", "isCorrect": false },
          { "text": "Update the image version in the deployment and perform a rolling update", "isCorrect": false }
        ]
      },
      {
        "question": "You are tasked with securing communication between pods in a Kubernetes cluster. What Kubernetes feature would you use to achieve this?",
        "answers": [
          { "text": "PodSecurityPolicy", "isCorrect": false },
          { "text": "NetworkPolicies", "isCorrect": true },
          { "text": "PodAffinity", "isCorrect": false },
          { "text": "ServiceMesh", "isCorrect": false }
        ]
      },
      {
        "question": "You need to schedule a pod to run on a specific node in your Kubernetes cluster. What Kubernetes feature would you use for this purpose?",
        "answers": [
          { "text": "NodeSelector", "isCorrect": false },
          { "text": "NodeAffinity", "isCorrect": true },
          { "text": "PodAffinity", "isCorrect": false },
          { "text": "PodAntiAffinity", "isCorrect": false }
        ]
      },
      {
        "question": "You want to expose a pod to the internet, and the pod needs to handle both HTTP and HTTPS traffic. What Kubernetes resource would you use?",
        "answers": [
          { "text": "Service", "isCorrect": true },
          { "text": "Ingress", "isCorrect": false },
          { "text": "ConfigMap", "isCorrect": false },
          { "text": "LoadBalancer", "isCorrect": false }
        ]
      },
      {
        "question": "You have a pod with multiple containers, and you need to share environment variables between them. What is the recommended way to achieve this?",
        "answers": [
          { "text": "Use the 'env' field in each container's specification", "isCorrect": false },
          { "text": "Define a ConfigMap with the environment variables and reference it in both containers", "isCorrect": true },
          { "text": "Use shared volumes to pass environment variable files between containers", "isCorrect": false },
          { "text": "Hardcode the environment variables in each container's Dockerfile", "isCorrect": false }
        ]
      },
      {
        "question": "You want to limit the amount of CPU resources a pod can use in a Kubernetes cluster. What Kubernetes resource would you use?",
        "answers": [
          { "text": "PodResourceQuota", "isCorrect": false },
          { "text": "LimitRange", "isCorrect": false },
          { "text": "ResourceQuota", "isCorrect": false },
          { "text": "ResourceLimits", "isCorrect": true }
        ]
      },
      {
        "question": "You need to schedule a pod to run only on nodes with SSD storage in your Kubernetes cluster. What Kubernetes feature would you use?",
        "answers": [
          { "text": "NodeSelector", "isCorrect": false },
          { "text": "NodeAffinity", "isCorrect": true },
          { "text": "PodAffinity", "isCorrect": false },
          { "text": "PodAntiAffinity", "isCorrect": false }
        ]
      },
      {
        "question": "You have a stateful application running in a pod, and you want to ensure the pod always runs on the same node after a restart. What Kubernetes feature would you use?",
        "answers": [
          { "text": "PodAffinity", "isCorrect": false },
          { "text": "PodAntiAffinity", "isCorrect": false },
          { "text": "PersistentVolume", "isCorrect": false },
          { "text": "StatefulSet", "isCorrect": true }
        ]
      },
      {
        "question": "You need to inject configuration files into a pod at runtime. What Kubernetes feature would you use for this purpose?",
        "answers": [
          { "text": "Secrets", "isCorrect": false },
          { "text": "ConfigMap", "isCorrect": true },
          { "text": "Environment Variables", "isCorrect": false },
          { "text": "VolumeMounts", "isCorrect": false }
        ]
      },
      {
        "question": "You want to ensure that a pod is running on a node with a specific label. What Kubernetes feature would you use?",
        "answers": [
          { "text": "NodeSelector", "isCorrect": false },
          { "text": "NodeAffinity", "isCorrect": true },
          { "text": "PodAffinity", "isCorrect": false },
          { "text": "PodAntiAffinity", "isCorrect": false }
        ]
      },
      {
        "question": "You are deploying a pod, and you want to assign it a specific amount of memory. What Kubernetes resource would you use?",
        "answers": [
          { "text": "PodResourceQuota", "isCorrect": false },
          { "text": "LimitRange", "isCorrect": false },
          { "text": "ResourceQuota", "isCorrect": false },
          { "text": "ResourceLimits", "isCorrect": true }
        ]
      },
      {
        "question": "You have a multi-container pod, and one of the containers crashes frequently. What Kubernetes feature can you use to automatically restart the failed container?",
        "answers": [
          { "text": "PodRestarter", "isCorrect": false },
          { "text": "ContainerRestartPolicy", "isCorrect": false },
          { "text": "PodSpecRestart", "isCorrect": false },
          { "text": "RestartPolicy", "isCorrect": true }
        ]
      },
      {
        "question": "You want to run a pod that executes a batch job and completes once the job is finished. Which type of pod termination policy would you use?",
        "answers": [
          { "text": "Never", "isCorrect": false },
          { "text": "OnFailure", "isCorrect": true },
          { "text": "Always", "isCorrect": false },
          { "text": "Once", "isCorrect": false }
        ]
      },
      {
        "question": "You need to expose a pod's ports to other pods within the same cluster, but not to the external network. What Kubernetes resource would you use for this?",
        "answers": [
          { "text": "Service", "isCorrect": true },
          { "text": "Ingress", "isCorrect": false },
          { "text": "NetworkPolicy", "isCorrect": false },
          { "text": "PodNetwork", "isCorrect": false }
        ]
      },
      {
        "question": "You are deploying a pod that requires access to sensitive information, such as API keys. What Kubernetes resource would you use to securely manage and pass this information?",
        "answers": [
          { "text": "PodSecrets", "isCorrect": false },
          { "text": "SecretsVolume", "isCorrect": false },
          { "text": "PodSecurityPolicy", "isCorrect": false },
          { "text": "Secrets", "isCorrect": true }
        ]
      },
      {
        "question": "You need to run a pod on a specific node with a GPU and SSD. How can you enforce these constraints in Kubernetes?",
        "answers": [
          { "text": "NodeSelectors", "isCorrect": false },
          { "text": "PodAffinity", "isCorrect": false },
          { "text": "Taints and Tolerations", "isCorrect": true },
          { "text": "PodConstraints", "isCorrect": false }
        ]
      },
      {
        "question": "You want to scale a deployment to have multiple replicas across different availability zones for high availability. What Kubernetes feature would you use?",
        "answers": [
          { "text": "PodReplication", "isCorrect": false },
          { "text": "DeploymentReplicas", "isCorrect": false },
          { "text": "AvailabilityZoneAffinity", "isCorrect": false },
          { "text": "PodAntiAffinity", "isCorrect": true }
        ]
      },
      {
        "question": "You have a pod running a critical application, and you want to ensure it's not scheduled on the same node as another instance of the same pod. What Kubernetes feature would you use?",
        "answers": [
          { "text": "PodAffinity", "isCorrect": false },
          { "text": "PodAntiAffinity", "isCorrect": true },
          { "text": "PodConstraints", "isCorrect": false },
          { "text": "NodeAffinity", "isCorrect": false }
        ]
      },
      {
        "question": "You need to pass a configuration file to a pod that requires access to it at runtime. What Kubernetes feature would you use for this purpose?",
        "answers": [
          { "text": "ConfigMap", "isCorrect": false },
          { "text": "Secrets", "isCorrect": false },
          { "text": "VolumeMounts", "isCorrect": true },
          { "text": "PodConfig", "isCorrect": false }
        ]
      },
      {
        "question": "You want to prevent a pod from being scheduled on a node with a specific label. What Kubernetes feature would you use?",
        "answers": [
          { "text": "NodeSelector", "isCorrect": false },
          { "text": "NodeAffinity", "isCorrect": false },
          { "text": "PodAntiAffinity", "isCorrect": false },
          { "text": "Taints and Tolerations", "isCorrect": true }
        ]
      },
      {
        "question": "You need to execute a one-time command in a running pod. What Kubernetes command would you use?",
        "answers": [
          { "text": "kubectl exec", "isCorrect": true },
          { "text": "kubectl run", "isCorrect": false },
          { "text": "kubectl attach", "isCorrect": false },
          { "text": "kubectl apply", "isCorrect": false }
        ]
      },
      {
        "question": "You want to perform a rolling restart of a deployment to apply a new configuration. What Kubernetes command would you use?",
        "answers": [
          { "text": "kubectl update", "isCorrect": false },
          { "text": "kubectl restart", "isCorrect": false },
          { "text": "kubectl rollout restart", "isCorrect": true },
          { "text": "kubectl scale", "isCorrect": false }
        ]
      },
      {
        "question": "You have a pod with multiple containers, and you want to share storage between them. What Kubernetes feature would you use?",
        "answers": [
          { "text": "VolumeMounts", "isCorrect": false },
          { "text": "PodVolumes", "isCorrect": false },
          { "text": "Volumes", "isCorrect": true },
          { "text": "SharedVolumes", "isCorrect": false }
        ]
      },
      {
        "question": "You want to automatically scale the number of replicas in a deployment based on CPU usage. What Kubernetes resource would you use?",
        "answers": [
          { "text": "AutoScaler", "isCorrect": true },
          { "text": "PodScaler", "isCorrect": false },
          { "text": "HorizontalPodAutoscaler", "isCorrect": false },
          { "text": "ReplicaScaler", "isCorrect": false }
        ]
      },
      {
        "question": "You are deploying a pod, and you want to limit its resource consumption by specifying CPU and memory limits. What Kubernetes resource would you use?",
        "answers": [
          { "text": "ResourceAllocation", "isCorrect": false },
          { "text": "PodQuota", "isCorrect": false },
          { "text": "ResourceLimits", "isCorrect": true },
          { "text": "PodConstraints", "isCorrect": false }
        ]
      },
      {
        "question": "You have a stateful application running in a pod, and you want to ensure the pod always runs on the same node after a restart. What Kubernetes feature would you use?",
        "answers": [
          { "text": "PodAffinity", "isCorrect": false },
          { "text": "PodAntiAffinity", "isCorrect": false },
          { "text": "PersistentVolume", "isCorrect": false },
          { "text": "StatefulSet", "isCorrect": true }
        ]
      },
      {
        "question": "You need to expose a pod's ports to other pods within the same cluster, but not to the external network. What Kubernetes resource would you use for this?",
        "answers": [
          { "text": "Service", "isCorrect": true },
          { "text": "Ingress", "isCorrect": false },
          { "text": "NetworkPolicy", "isCorrect": false },
          { "text": "PodNetwork", "isCorrect": false }
        ]
      },
      {
        "question": "You have a pod running a critical application, and you want to ensure it's not scheduled on the same node as another instance of the same pod. What Kubernetes feature would you use?",
        "answers": [
          { "text": "PodAffinity", "isCorrect": false },
          { "text": "PodAntiAffinity", "isCorrect": true },
          { "text": "PodConstraints", "isCorrect": false },
          { "text": "NodeAffinity", "isCorrect": false }
        ]
      },
      {
        "question": "You need to pass a configuration file to a pod that requires access to it at runtime. What Kubernetes feature would you use for this purpose?",
        "answers": [
          { "text": "ConfigMap", "isCorrect": false },
          { "text": "Secrets", "isCorrect": false },
          { "text": "VolumeMounts", "isCorrect": true },
          { "text": "PodConfig", "isCorrect": false }
        ]
      },
      {
        "question": "You have a pod running a critical application, and you want to monitor its performance in real-time. What Kubernetes feature would you use for this purpose?",
        "answers": [
          { "text": "PodMetrics", "isCorrect": false },
          { "text": "KubeletLogs", "isCorrect": false },
          { "text": "kubectl stats", "isCorrect": true },
          { "text": "PodMonitor", "isCorrect": false }
        ]
      },
      {
        "question": "You want to restrict a pod's access to certain nodes in your Kubernetes cluster. What Kubernetes feature would you use for this purpose?",
        "answers": [
          { "text": "PodNetworkPolicy", "isCorrect": false },
          { "text": "NodeSelector", "isCorrect": false },
          { "text": "PodAffinity", "isCorrect": false },
          { "text": "Taints and Tolerations", "isCorrect": true }
        ]
      },
      {
        "question": "You have a pod running a web server, and you want to update the configuration files without restarting the pod. What Kubernetes resource would you use for this purpose?",
        "answers": [
          { "text": "PodConfigMap", "isCorrect": true },
          { "text": "ConfigMapVolume", "isCorrect": false },
          { "text": "PodConfig", "isCorrect": false },
          { "text": "PodUpdate", "isCorrect": false }
        ]
      },
      {
        "question": "You want to ensure that a pod is always scheduled on a node with a specific label, and if no such node is available, the pod should not be scheduled at all. What Kubernetes feature would you use?",
        "answers": [
          { "text": "NodeSelector", "isCorrect": false },
          { "text": "NodeAffinity", "isCorrect": false },
          { "text": "PodAffinity", "isCorrect": true },
          { "text": "PodAntiAffinity", "isCorrect": false }
        ]
      },
      {
        "question": "You need to deploy a pod with specific storage requirements, and you want to ensure it is scheduled on a node with the appropriate storage class. What Kubernetes feature would you use?",
        "answers": [
          { "text": "PodStorage", "isCorrect": false },
          { "text": "PersistentVolumeClaim", "isCorrect": true },
          { "text": "VolumeMounts", "isCorrect": false },
          { "text": "StorageClassSelector", "isCorrect": false }
        ]
      },
      {
        "question": "You have a pod running a stateful application, and you want to provide each replica with a unique identifier. What Kubernetes feature would you use?",
        "answers": [
          { "text": "StatefulSet", "isCorrect": true },
          { "text": "PodReplicaID", "isCorrect": false },
          { "text": "UniquePodID", "isCorrect": false },
          { "text": "PodLabels", "isCorrect": false }
        ]
      },
      {
        "question": "You need to run a pod on nodes with specific hardware capabilities, and you want to specify this in the pod's configuration. What Kubernetes feature would you use?",
        "answers": [
          { "text": "NodeConstraints", "isCorrect": false },
          { "text": "NodeCapabilities", "isCorrect": false },
          { "text": "NodeResources", "isCorrect": false },
          { "text": "Taints and Tolerations", "isCorrect": true }
        ]
      },
      {
        "question": "You have a pod with multiple containers, and you want to share a file between them. What Kubernetes feature would you use?",
        "answers": [
          { "text": "SharedFileVolume", "isCorrect": false },
          { "text": "FileSharingPod", "isCorrect": false },
          { "text": "VolumeMounts", "isCorrect": true },
          { "text": "PodFileShare", "isCorrect": false }
        ]
      },
      {
        "question": "You want to deploy a pod with specific environment variables, and you want these variables to be encrypted at rest. What Kubernetes feature would you use?",
        "answers": [
          { "text": "EncryptedPodConfig", "isCorrect": false },
          { "text": "Secrets", "isCorrect": true },
          { "text": "PodSecurityPolicy", "isCorrect": false },
          { "text": "EncryptedEnvVars", "isCorrect": false }
        ]
      },
      {
        "question": "You have a pod that needs to access a database, and you want to securely provide the database credentials to the pod. What Kubernetes feature would you use?",
        "answers": [
          { "text": "PodSecrets", "isCorrect": false },
          { "text": "DatabaseAccessConfig", "isCorrect": false },
          { "text": "Secrets", "isCorrect": true },
          { "text": "EncryptedPodConfig", "isCorrect": false }
        ]
      },
      {
        "question": "You need to expose a pod to the internet, and you want to ensure traffic is load-balanced across multiple replicas. What Kubernetes resource would you use?",
        "answers": [
          { "text": "Ingress", "isCorrect": true },
          { "text": "Service", "isCorrect": false },
          { "text": "LoadBalancer", "isCorrect": false },
          { "text": "PodBalancer", "isCorrect": false }
        ]
      },
      {
        "question": "You want to perform a rolling update of a deployment to deploy a new version of your application. What Kubernetes command would you use?",
        "answers": [
          { "text": "kubectl upgrade", "isCorrect": false },
          { "text": "kubectl update", "isCorrect": false },
          { "text": "kubectl rollout", "isCorrect": true },
          { "text": "kubectl apply", "isCorrect": false }
        ]
      },
      {
        "question": "You need to run a one-time command in a running pod to troubleshoot an issue. What Kubernetes command would you use?",
        "answers": [
          { "text": "kubectl debug", "isCorrect": false },
          { "text": "kubectl run", "isCorrect": false },
          { "text": "kubectl exec", "isCorrect": true },
          { "text": "kubectl attach", "isCorrect": false }
        ]
      },
      {
        "question": "You have a pod running a web server, and you want to expose it to the external network using a DNS name. What Kubernetes resource would you use?",
        "answers": [
          { "text": "Service", "isCorrect": false },
          { "text": "Ingress", "isCorrect": true },
          { "text": "PodDNS", "isCorrect": false },
          { "text": "LoadBalancer", "isCorrect": false }
        ]
      },
      {
        "question": "You need to scale a deployment based on custom metrics such as the number of items in a queue. What Kubernetes resource would you use?",
        "answers": [
          { "text": "HorizontalPodAutoscaler", "isCorrect": true },
          { "text": "CustomMetricsScaler", "isCorrect": false },
          { "text": "PodScaler", "isCorrect": false },
          { "text": "AutoScaler", "isCorrect": false }
        ]
      },
      {
        "question": "You have a pod running a background job that periodically fetches data from an external API. What Kubernetes feature would you use to schedule this job?",
        "answers": [
          { "text": "CronJob", "isCorrect": true },
          { "text": "PeriodicJob", "isCorrect": false },
          { "text": "JobScheduler", "isCorrect": false },
          { "text": "RecurringJob", "isCorrect": false }
        ]
      },
      {
        "question": "You want to ensure that a pod is scheduled on nodes with a specific label, and you also want to spread the replicas across those nodes. What Kubernetes feature would you use?",
        "answers": [
          { "text": "NodeAffinity", "isCorrect": false },
          { "text": "PodAffinity", "isCorrect": true },
          { "text": "PodAntiAffinity", "isCorrect": false },
          { "text": "NodeLabels", "isCorrect": false }
        ]
      },
      {
        "question": "You need to deploy a pod with specific resource constraints, such as CPU and memory limits. What Kubernetes feature would you use?",
        "answers": [
          { "text": "ResourceQuota", "isCorrect": false },
          { "text": "ResourceLimits", "isCorrect": true },
          { "text": "PodConstraints", "isCorrect": false },
          { "text": "LimitRange", "isCorrect": false }
        ]
      }
  ]
  