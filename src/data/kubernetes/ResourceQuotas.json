[
    {
      "question": "In a Kubernetes cluster, what does a ResourceQuota define?",
      "answers": [
        { "text": "Maximum number of nodes in the cluster", "isCorrect": false },
        { "text": "Maximum number of namespaces in the cluster", "isCorrect": false },
        { "text": "Constraints that limit aggregate resource consumption", "isCorrect": true },
        { "text": "Minimum number of pods per namespace", "isCorrect": false }
      ]
    },
    {
      "question": "When defining a ResourceQuota, what resource types can be restricted?",
      "answers": [
        { "text": "Only CPU and Memory", "isCorrect": true },
        { "text": "Only Storage", "isCorrect": false },
        { "text": "Only GPU", "isCorrect": false },
        { "text": "All of the above", "isCorrect": false }
      ]
    },
    {
      "question": "What happens if a pod attempts to exceed the resource limits specified in a ResourceQuota?",
      "answers": [
        { "text": "Pod gets automatically terminated", "isCorrect": false },
        { "text": "Pod is denied creation", "isCorrect": true },
        { "text": "Pod goes into a warning state", "isCorrect": false },
        { "text": "Pod's resource limits are automatically adjusted", "isCorrect": false }
      ]
    },
    {
      "question": "How can you enforce a limit on the number of objects (pods, services, etc.) in a namespace using ResourceQuotas?",
      "answers": [
        { "text": "Set the `max-objects` field in the ResourceQuota", "isCorrect": false },
        { "text": "Use the `pod-quota` field in the ResourceQuota manifest", "isCorrect": false },
        { "text": "Set the `pods` field in the ResourceQuota manifest", "isCorrect": true },
        { "text": "It is not possible to limit the number of objects with ResourceQuotas", "isCorrect": false }
      ]
    },
    {
      "question": "Which of the following ResourceQuota settings restricts the total CPU and memory consumption in a namespace?",
      "answers": [
        { "text": "limits.cpu and limits.memory", "isCorrect": true },
        { "text": "requests.cpu and requests.memory", "isCorrect": false },
        { "text": "pod.cpu and pod.memory", "isCorrect": false },
        { "text": "quota.cpu and quota.memory", "isCorrect": false }
      ]
    },
    {
      "question": "In a ResourceQuota, what is the purpose of the `scopes` field?",
      "answers": [
        { "text": "To specify the scope of network policies", "isCorrect": false },
        { "text": "To define the scope of resource limits within a namespace", "isCorrect": false },
        { "text": "To list the namespaces exempt from resource constraints", "isCorrect": true },
        { "text": "To scope the visibility of secrets within a namespace", "isCorrect": false }
      ]
    },
    {
      "question": "When a ResourceQuota is applied, how are subresources like ephemeral-storage handled?",
      "answers": [
        { "text": "They are not considered in the ResourceQuota", "isCorrect": false },
        { "text": "They are aggregated separately from other resources", "isCorrect": true },
        { "text": "They are aggregated with CPU and memory", "isCorrect": false },
        { "text": "They are handled as a separate ResourceQuota", "isCorrect": false }
      ]
    },
    {
      "question": "What is the purpose of `hard` and `used` fields in a ResourceQuota status?",
      "answers": [
        { "text": "To track the historical resource usage in the namespace", "isCorrect": false },
        { "text": "To set hard limits on resource consumption", "isCorrect": true },
        { "text": "To define soft limits for resources", "isCorrect": false },
        { "text": "To specify resource quotas for subresources", "isCorrect": false }
      ]
    },
    {
      "question": "In a ResourceQuota, what is the purpose of the `projected` field?",
      "answers": [
        { "text": "To project future resource consumption based on historical data", "isCorrect": false },
        { "text": "To project resource limits across multiple namespaces", "isCorrect": false },
        { "text": "To project the consumption of resources by all objects in the namespace", "isCorrect": true },
        { "text": "To project resource utilization in a multi-cluster environment", "isCorrect": false }
      ]
    },
    {
      "question": "When defining a ResourceQuota, what is the difference between `hard` and `soft` limits?",
      "answers": [
        { "text": "`hard` limits are strict and cannot be exceeded, while `soft` limits are advisory", "isCorrect": true },
        { "text": "`soft` limits are strict and cannot be exceeded, while `hard` limits are advisory", "isCorrect": false },
        { "text": "Both `hard` and `soft` limits serve the same purpose", "isCorrect": false },
        { "text": "There is no difference between `hard` and `soft` limits", "isCorrect": false }
      ]
    },
    {
      "question": "How does a ResourceQuota impact the scheduling of pods in a Kubernetes cluster?",
      "answers": [
        { "text": "It has no impact on pod scheduling", "isCorrect": false },
        { "text": "Pods are only scheduled if there is a ResourceQuota violation", "isCorrect": false },
        { "text": "Pods are scheduled regardless of ResourceQuota limits", "isCorrect": false },
        { "text": "Pods are only scheduled if they stay within the ResourceQuota limits", "isCorrect": true }
      ]
    },
    {
        "question": "When defining a ResourceQuota, what does the `requests` field specify?",
        "answers": [
          { "text": "The maximum number of requests a pod can make", "isCorrect": false },
          { "text": "The minimum amount of resources a pod is guaranteed", "isCorrect": true },
          { "text": "The maximum number of concurrent requests to the API server", "isCorrect": false },
          { "text": "The minimum number of replicas for a deployment", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, how can you set limits on the number of persistent volume claims (PVCs) in a namespace?",
        "answers": [
          { "text": "Use the `pvc` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Use the `pvc-claims` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Set the `persistentvolumeclaims` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "It is not possible to limit PVCs with ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "What happens if a pod exceeds the `requests` specified in a ResourceQuota?",
        "answers": [
          { "text": "Pod is terminated immediately", "isCorrect": false },
          { "text": "Pod is allowed to run but receives a warning", "isCorrect": true },
          { "text": "Pod is denied creation", "isCorrect": false },
          { "text": "Pod's requests are automatically adjusted", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, what is the purpose of the `limits` field?",
        "answers": [
          { "text": "To set minimum resource consumption for pods", "isCorrect": false },
          { "text": "To define limits on the total number of objects in the namespace", "isCorrect": false },
          { "text": "To specify the maximum resource consumption allowed for pods", "isCorrect": true },
          { "text": "To limit the total CPU and memory consumption across all namespaces", "isCorrect": false }
        ]
      },
      {
        "question": "When a ResourceQuota is applied, how are resources distributed among different pods in the same namespace?",
        "answers": [
          { "text": "Equally among all pods", "isCorrect": false },
          { "text": "Based on the order of pod creation", "isCorrect": false },
          { "text": "Based on resource requests and limits specified in each pod", "isCorrect": true },
          { "text": "Randomly assigned to each pod", "isCorrect": false }
        ]
      },
      {
        "question": "What is the purpose of the `limits.cpu` field in a ResourceQuota?",
        "answers": [
          { "text": "To set the maximum number of CPU cores available in the namespace", "isCorrect": false },
          { "text": "To limit the total CPU consumption of all pods in the namespace", "isCorrect": true },
          { "text": "To specify the minimum CPU requirement for each pod", "isCorrect": false },
          { "text": "To restrict the number of CPU-intensive pods in the namespace", "isCorrect": false }
        ]
      },
      {
        "question": "When setting resource limits in a ResourceQuota, what unit is used for the `limits.memory` field?",
        "answers": [
          { "text": "Megabytes (MB)", "isCorrect": true },
          { "text": "Gigabytes (GB)", "isCorrect": false },
          { "text": "Kilobytes (KB)", "isCorrect": false },
          { "text": "Terabytes (TB)", "isCorrect": false }
        ]
      },
      {
        "question": "What is the purpose of the `scopes.persistentvolumeclaims` field in a ResourceQuota?",
        "answers": [
          { "text": "To define the scope of PVCs in the namespace", "isCorrect": true },
          { "text": "To limit the total number of persistent volume claims", "isCorrect": false },
          { "text": "To specify the storage class for PVCs", "isCorrect": false },
          { "text": "To project future resource utilization for PVCs", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, how can you limit the total number of pods in a namespace?",
        "answers": [
          { "text": "Use the `pods` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Set the `max-pods` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Use the `pod-limit` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "It is not possible to limit the number of pods with ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "What is the impact of applying a ResourceQuota with no resource limits specified?",
        "answers": [
          { "text": "Pods are denied creation", "isCorrect": false },
          { "text": "Pods are allowed to run without any resource constraints", "isCorrect": true },
          { "text": "Pods are terminated immediately", "isCorrect": false },
          { "text": "Pods go into a warning state", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, how can you limit the total number of services in a namespace?",
        "answers": [
          { "text": "Use the `max-services` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Set the `services` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Limiting services is not supported in ResourceQuotas", "isCorrect": false },
          { "text": "Use the `service-limit` field in the ResourceQuota manifest", "isCorrect": false }
        ]
      },
      {
        "question": "What is the purpose of the `requests.storage` field in a ResourceQuota?",
        "answers": [
          { "text": "To specify the minimum storage required for each pod", "isCorrect": false },
          { "text": "To limit the total storage requests for all pods in the namespace", "isCorrect": true },
          { "text": "To set the maximum storage available in the namespace", "isCorrect": false },
          { "text": "To project future storage needs for pods in the namespace", "isCorrect": false }
        ]
      },
      {
        "question": "When a ResourceQuota is applied, how are resource constraints enforced for pods?",
        "answers": [
          { "text": "At the time of pod creation only", "isCorrect": false },
          { "text": "At runtime as pods consume resources", "isCorrect": true },
          { "text": "During pod termination", "isCorrect": false },
          { "text": "Resource constraints are not enforced for pods", "isCorrect": false }
        ]
      },
      {
        "question": "What is the purpose of the `configmaps` field in a ResourceQuota?",
        "answers": [
          { "text": "To limit the total number of ConfigMaps in the namespace", "isCorrect": true },
          { "text": "To define the configuration maps for pods", "isCorrect": false },
          { "text": "To specify the minimum and maximum size of ConfigMaps", "isCorrect": false },
          { "text": "To project future ConfigMap needs for pods in the namespace", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, how can you enforce constraints on the number of network policies in a namespace?",
        "answers": [
          { "text": "Use the `networkpolicies` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Set the `max-networkpolicies` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Use the `networkpolicy-limit` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Limiting network policies is not supported in ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "What is the impact of exceeding the `limits.memory` in a ResourceQuota for a pod?",
        "answers": [
          { "text": "Pod is allowed to run but receives a warning", "isCorrect": false },
          { "text": "Pod is denied creation", "isCorrect": true },
          { "text": "Pod goes into a warning state", "isCorrect": false },
          { "text": "Pod's memory consumption is automatically adjusted", "isCorrect": false }
        ]
      },
      {
        "question": "How can you limit the total number of secrets in a namespace using a ResourceQuota?",
        "answers": [
          { "text": "Use the `max-secrets` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Set the `secrets` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Use the `secret-limit` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "It is not possible to limit secrets with ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, what is the purpose of the `persistentvolumeclaims.storage` field?",
        "answers": [
          { "text": "To specify the minimum storage required for each PVC", "isCorrect": false },
          { "text": "To limit the total storage requests for all PVCs in the namespace", "isCorrect": false },
          { "text": "To set the maximum storage available for PVCs", "isCorrect": false },
          { "text": "To limit the total storage consumed by PVCs in the namespace", "isCorrect": true }
        ]
      },
      {
        "question": "How can you restrict the creation of pods without resource requests and limits in a namespace?",
        "answers": [
          { "text": "Use the `enforce-pods` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Set the `require-limits` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Limiting pods without resource constraints is not supported in ResourceQuotas", "isCorrect": false },
          { "text": "Use the `limit-pods` field in the ResourceQuota manifest", "isCorrect": false }
        ]
      },
      {
        "question": "What is the purpose of the `services.loadbalancers` field in a ResourceQuota?",
        "answers": [
          { "text": "To specify the maximum number of load balancers in the namespace", "isCorrect": true },
          { "text": "To limit the total number of services in the namespace", "isCorrect": false },
          { "text": "To define the services with load balancer type", "isCorrect": false },
          { "text": "To project future load balancer needs for services in the namespace", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, what is the purpose of the `resourcequotas` field?",
        "answers": [
          { "text": "To set quotas on the total number of ResourceQuotas in the namespace", "isCorrect": false },
          { "text": "To limit the creation of ResourceQuotas in the namespace", "isCorrect": false },
          { "text": "To specify the maximum number of objects within a ResourceQuota", "isCorrect": true },
          { "text": "It is not possible to limit ResourceQuotas with ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "How can you enforce constraints on the number of ingresses in a namespace using a ResourceQuota?",
        "answers": [
          { "text": "Use the `max-ingresses` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Set the `ingresses` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Use the `ingress-limit` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Limiting ingresses is not supported in ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "What happens if a pod exceeds the `requests.cpu` in a ResourceQuota?",
        "answers": [
          { "text": "Pod is allowed to run without any warning", "isCorrect": true },
          { "text": "Pod is denied creation", "isCorrect": false },
          { "text": "Pod goes into a warning state", "isCorrect": false },
          { "text": "Pod's CPU consumption is automatically adjusted", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, how can you limit the total number of replication controllers in a namespace?",
        "answers": [
          { "text": "Use the `replicationcontrollers` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Set the `max-replicationcontrollers` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Use the `replicationcontroller-limit` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Limiting replication controllers is not supported in ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "What is the impact of exceeding the `limits.cpu` in a ResourceQuota for a pod?",
        "answers": [
          { "text": "Pod is allowed to run without any warning", "isCorrect": false },
          { "text": "Pod is denied creation", "isCorrect": true },
          { "text": "Pod goes into a warning state", "isCorrect": false },
          { "text": "Pod's CPU consumption is automatically adjusted", "isCorrect": false }
        ]
      },
      {
        "question": "How can you limit the total number of endpoints in a namespace using a ResourceQuota?",
        "answers": [
          { "text": "Use the `max-endpoints` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Set the `endpoints` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Use the `endpoint-limit` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Limiting endpoints is not supported in ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "What is the purpose of the `persistentvolumeclaims` field in a ResourceQuota?",
        "answers": [
          { "text": "To limit the total number of PVCs in the namespace", "isCorrect": false },
          { "text": "To set the maximum number of PVCs allowed in the namespace", "isCorrect": false },
          { "text": "To define resource constraints for persistent volume claims", "isCorrect": false },
          { "text": "To specify resource constraints for storage requests in PVCs", "isCorrect": true }
        ]
      },
      {
        "question": "In a ResourceQuota, how can you limit the total number of configmaps in a namespace?",
        "answers": [
          { "text": "Use the `max-configmaps` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Set the `configmaps` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Use the `configmap-limit` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "It is not possible to limit configmaps with ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "What is the purpose of the `persistentvolumeclaims.storage` field in a ResourceQuota?",
        "answers": [
          { "text": "To set the minimum storage required for each PVC", "isCorrect": false },
          { "text": "To limit the total storage consumed by PVCs in the namespace", "isCorrect": true },
          { "text": "To define the storage class for PVCs", "isCorrect": false },
          { "text": "To project future storage needs for PVCs in the namespace", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, how can you restrict the creation of pods without resource requests and limits?",
        "answers": [
          { "text": "Use the `enforce-limits` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Set the `require-limits` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Limiting pods without resource constraints is not supported in ResourceQuotas", "isCorrect": false },
          { "text": "Use the `limit-pods` field in the ResourceQuota manifest", "isCorrect": false }
        ]
      },
      {
        "question": "What happens if a pod exceeds the `requests.memory` in a ResourceQuota?",
        "answers": [
          { "text": "Pod is allowed to run without any warning", "isCorrect": false },
          { "text": "Pod is denied creation", "isCorrect": true },
          { "text": "Pod goes into a warning state", "isCorrect": false },
          { "text": "Pod's memory consumption is automatically adjusted", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, how can you limit the total number of network policies in a namespace?",
        "answers": [
          { "text": "Use the `max-networkpolicies` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Set the `networkpolicies` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Use the `networkpolicy-limit` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Limiting network policies is not supported in ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "What is the purpose of the `services.loadbalancers` field in a ResourceQuota?",
        "answers": [
          { "text": "To specify the maximum number of load balancers in the namespace", "isCorrect": true },
          { "text": "To limit the total number of services in the namespace", "isCorrect": false },
          { "text": "To define the services with load balancer type", "isCorrect": false },
          { "text": "To project future load balancer needs for services in the namespace", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, what is the purpose of the `persistentvolumeclaims` field?",
        "answers": [
          { "text": "To limit the total number of PVCs in the namespace", "isCorrect": false },
          { "text": "To set the maximum number of PVCs allowed in the namespace", "isCorrect": false },
          { "text": "To define resource constraints for persistent volume claims", "isCorrect": false },
          { "text": "To specify resource constraints for storage requests in PVCs", "isCorrect": true }
        ]
      },
      {
        "question": "How can you limit the total number of endpoints in a namespace using a ResourceQuota?",
        "answers": [
          { "text": "Use the `max-endpoints` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Set the `endpoints` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Use the `endpoint-limit` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Limiting endpoints is not supported in ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, how can you enforce constraints on the number of ingresses?",
        "answers": [
          { "text": "Use the `max-ingresses` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Set the `ingresses` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Use the `ingress-limit` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Limiting ingresses is not supported in ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "What happens if a pod exceeds the `limits.memory` in a ResourceQuota?",
        "answers": [
          { "text": "Pod is allowed to run without any warning", "isCorrect": false },
          { "text": "Pod is denied creation", "isCorrect": true },
          { "text": "Pod goes into a warning state", "isCorrect": false },
          { "text": "Pod's memory consumption is automatically adjusted", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, how can you limit the total number of replication controllers?",
        "answers": [
          { "text": "Use the `replicationcontrollers` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Set the `max-replicationcontrollers` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Use the `replicationcontroller-limit` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Limiting replication controllers is not supported in ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "What is the impact of exceeding the `limits.cpu` in a ResourceQuota for a pod?",
        "answers": [
          { "text": "Pod is allowed to run without any warning", "isCorrect": false },
          { "text": "Pod is denied creation", "isCorrect": true },
          { "text": "Pod goes into a warning state", "isCorrect": false },
          { "text": "Pod's CPU consumption is automatically adjusted", "isCorrect": false }
        ]
      },
      {
        "question": "How can you limit the total number of secrets in a namespace using a ResourceQuota?",
        "answers": [
          { "text": "Use the `max-secrets` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Set the `secrets` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Use the `secret-limit` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "It is not possible to limit secrets with ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, what is the purpose of the `resourcequotas` field?",
        "answers": [
          { "text": "To set quotas on the total number of ResourceQuotas in the namespace", "isCorrect": false },
          { "text": "To limit the creation of ResourceQuotas in the namespace", "isCorrect": false },
          { "text": "To specify the maximum number of objects within a ResourceQuota", "isCorrect": true },
          { "text": "It is not possible to limit ResourceQuotas with ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "How can you enforce constraints on the number of persistent volume claims (PVCs)?",
        "answers": [
          { "text": "Use the `max-pvcs` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Set the `pvc-limit` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Use the `persistentvolumeclaim` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Limiting PVCs is not supported in ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "What is the purpose of the `services` field in a ResourceQuota?",
        "answers": [
          { "text": "To limit the total number of services in the namespace", "isCorrect": false },
          { "text": "To define the services in the namespace", "isCorrect": false },
          { "text": "To set the maximum number of services allowed in the namespace", "isCorrect": true },
          { "text": "To project future service needs for pods in the namespace", "isCorrect": false }
        ]
      },
      {
        "question": "In a ResourceQuota, how can you limit the total number of endpoints?",
        "answers": [
          { "text": "Use the `max-endpoints` field in the ResourceQuota manifest", "isCorrect": true },
          { "text": "Set the `endpoints` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Use the `endpoint-limit` field in the ResourceQuota manifest", "isCorrect": false },
          { "text": "Limiting endpoints is not supported in ResourceQuotas", "isCorrect": false }
        ]
      },
      {
        "question": "What happens if a pod exceeds the `limits.cpu` in a ResourceQuota?",
        "answers": [
          { "text": "Pod is allowed to run without any warning", "isCorrect": false },
          { "text": "Pod is denied creation", "isCorrect": true },
          { "text": "Pod goes into a warning state", "isCorrect": false },
          { "text": "Pod's CPU consumption is automatically adjusted", "isCorrect": false }
        ]
      }
  ]
  