[
    {
      "question": "In a Kubernetes cluster, you want to restrict pod communication within a specific namespace. Which NetworkPolicy resource should you use?",
      "answers": [
        { "text": "PodSecurityPolicy", "isCorrect": false },
        { "text": "Ingress", "isCorrect": false },
        { "text": "NetworkPolicy", "isCorrect": true },
        { "text": "ServiceAccount", "isCorrect": false }
      ]
    },
    {
      "question": "You have a scenario where you need to allow incoming traffic only to pods labeled 'app=web' and deny all other incoming traffic. Which NetworkPolicy should be applied?",
      "answers": [
        { "text": "Ingress", "isCorrect": true },
        { "text": "Egress", "isCorrect": false },
        { "text": "ClusterNetworkPolicy", "isCorrect": false },
        { "text": "PodPolicy", "isCorrect": false }
      ]
    },
    {
      "question": "In a multi-tier application, you want to allow communication only from frontend pods to backend pods. What rule should you define in the NetworkPolicy?",
      "answers": [
        { "text": "Ingress from frontend to backend", "isCorrect": true },
        { "text": "Egress from frontend to backend", "isCorrect": false },
        { "text": "Ingress from backend to frontend", "isCorrect": false },
        { "text": "Egress from backend to frontend", "isCorrect": false }
      ]
    },
    {
      "question": "You need to allow traffic from pods in one namespace to pods in another namespace. Which type of NetworkPolicy should you use?",
      "answers": [
        { "text": "Ingress", "isCorrect": false },
        { "text": "Egress", "isCorrect": false },
        { "text": "Peer", "isCorrect": false },
        { "text": "NetworkPolicy with NamespaceSelector", "isCorrect": true }
      ]
    },
    {
      "question": "In a scenario where you want to deny egress traffic from pods labeled 'env=prod' to any external IP address, which NetworkPolicy rule should be defined?",
      "answers": [
        { "text": "Egress to external IP", "isCorrect": true },
        { "text": "Egress from 'env=prod'", "isCorrect": false },
        { "text": "Ingress from external IP", "isCorrect": false },
        { "text": "Egress to 'env=prod'", "isCorrect": false }
      ]
    },
    {
      "question": "You want to allow incoming traffic to pods only from a specific IP range. What should you use in the NetworkPolicy?",
      "answers": [
        { "text": "Ingress from specific IP range", "isCorrect": true },
        { "text": "Egress to specific IP range", "isCorrect": false },
        { "text": "Ingress to specific IP range", "isCorrect": false },
        { "text": "Egress from specific IP range", "isCorrect": false }
      ]
    },
    {
      "question": "You are tasked with allowing communication between pods based on their labels, but only if they share at least two labels. What NetworkPolicy rule should be defined?",
      "answers": [
        { "text": "MatchLabels: 2", "isCorrect": true },
        { "text": "MatchExpressions: 2", "isCorrect": false },
        { "text": "MinimumLabels: 2", "isCorrect": false },
        { "text": "RequiredLabels: 2", "isCorrect": false }
      ]
    },
    {
      "question": "In a Kubernetes cluster with multiple namespaces, you need to allow traffic between pods labeled 'role=db' and 'role=app' only if they belong to the same namespace. What rule should you define in the NetworkPolicy?",
      "answers": [
        { "text": "Ingress from role=app to role=db", "isCorrect": false },
        { "text": "Egress from role=app to role=db", "isCorrect": false },
        { "text": "Ingress from role=db to role=app", "isCorrect": false },
        { "text": "NetworkPolicy with PodSelector for both roles", "isCorrect": true }
      ]
    },
    {
      "question": "You want to allow egress traffic from pods to external IP addresses, but only for specific ports (e.g., 80 and 443). What rule should you define in the NetworkPolicy?",
      "answers": [
        { "text": "Egress to external IP on ports 80 and 443", "isCorrect": true },
        { "text": "Egress to external IP", "isCorrect": false },
        { "text": "Egress from specific ports 80 and 443", "isCorrect": false },
        { "text": "Egress to specific IP range on ports 80 and 443", "isCorrect": false }
      ]
    },
    {
      "question": "In a scenario where you want to deny all incoming and outgoing traffic for pods labeled 'role=untrusted', what NetworkPolicy rule should be defined?",
      "answers": [
        { "text": "Deny all traffic", "isCorrect": true },
        { "text": "Deny Ingress and Egress", "isCorrect": false },
        { "text": "Allow all traffic", "isCorrect": false },
        { "text": "Allow Ingress and Egress", "isCorrect": false }
      ]
    },
    {
        "question": "In a Kubernetes cluster, you want to allow incoming traffic only from pods in the same namespace. Which NetworkPolicy resource should you use?",
        "answers": [
          { "text": "Egress", "isCorrect": false },
          { "text": "NamespacePolicy", "isCorrect": false },
          { "text": "NetworkPolicy with PodSelector", "isCorrect": false },
          { "text": "Ingress", "isCorrect": true }
        ]
      },
      {
        "question": "You need to allow pods labeled 'tier=frontend' to communicate with pods labeled 'tier=backend', and deny all other communication. What NetworkPolicy rule should you define?",
        "answers": [
          { "text": "Ingress from frontend to backend", "isCorrect": true },
          { "text": "Egress from frontend to backend", "isCorrect": false },
          { "text": "Ingress from backend to frontend", "isCorrect": false },
          { "text": "Egress from backend to frontend", "isCorrect": false }
        ]
      },
      {
        "question": "You want to allow egress traffic from pods to any IP address, but only for specific ports (e.g., 22 and 443). What rule should you define in the NetworkPolicy?",
        "answers": [
          { "text": "Egress to any IP on ports 22 and 443", "isCorrect": true },
          { "text": "Egress to any IP", "isCorrect": false },
          { "text": "Egress from specific ports 22 and 443", "isCorrect": false },
          { "text": "Egress to specific IP range on ports 22 and 443", "isCorrect": false }
        ]
      },
      {
        "question": "In a scenario where you want to allow communication only between pods in different namespaces, what rule should you define in the NetworkPolicy?",
        "answers": [
          { "text": "Egress with different namespace", "isCorrect": true },
          { "text": "Egress from same namespace", "isCorrect": false },
          { "text": "Ingress with different namespace", "isCorrect": false },
          { "text": "Ingress from same namespace", "isCorrect": false }
        ]
      },
      {
        "question": "You are tasked with denying egress traffic from pods labeled 'role=untrusted' to any IP address. What NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "Egress from 'role=untrusted'", "isCorrect": true },
          { "text": "Egress to 'role=untrusted'", "isCorrect": false },
          { "text": "Deny Egress from 'role=untrusted'", "isCorrect": false },
          { "text": "Deny Egress to 'role=untrusted'", "isCorrect": false }
        ]
      },
      {
        "question": "You need to allow pods labeled 'env=production' to communicate with external services on ports 80 and 443. What rule should you define in the NetworkPolicy?",
        "answers": [
          { "text": "Egress to external IP on ports 80 and 443", "isCorrect": true },
          { "text": "Ingress from external IP on ports 80 and 443", "isCorrect": false },
          { "text": "Egress to external IP", "isCorrect": false },
          { "text": "Ingress from external IP", "isCorrect": false }
        ]
      },
      {
        "question": "In a scenario where you want to allow communication between pods only if they have a common label, what NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "CommonLabelSelector", "isCorrect": false },
          { "text": "MatchLabelsIntersection", "isCorrect": true },
          { "text": "SharedLabels", "isCorrect": false },
          { "text": "IntersectionLabelSelector", "isCorrect": false }
        ]
      },
      {
        "question": "You want to deny all incoming traffic to pods labeled 'tier=public'. What NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "Deny Ingress to 'tier=public'", "isCorrect": true },
          { "text": "Deny Ingress from 'tier=public'", "isCorrect": false },
          { "text": "Deny all Ingress", "isCorrect": false },
          { "text": "Allow Ingress to 'tier=public'", "isCorrect": false }
        ]
      },
      {
        "question": "You have a scenario where you want to allow communication between pods labeled 'app=frontend' and 'app=backend' only if they belong to the same namespace. What rule should you define in the NetworkPolicy?",
        "answers": [
          { "text": "Ingress from app=frontend to app=backend", "isCorrect": false },
          { "text": "Egress from app=frontend to app=backend", "isCorrect": false },
          { "text": "NetworkPolicy with PodSelector for both apps", "isCorrect": true },
          { "text": "Allow Ingress and Egress between app=frontend and app=backend", "isCorrect": false }
        ]
      },
      {
        "question": "You want to allow egress traffic from pods to external IP addresses, but only for specific protocols (e.g., TCP and UDP). What rule should you define in the NetworkPolicy?",
        "answers": [
          { "text": "Egress to external IP on protocols TCP and UDP", "isCorrect": true },
          { "text": "Egress to external IP", "isCorrect": false },
          { "text": "Egress from specific protocols TCP and UDP", "isCorrect": false },
          { "text": "Egress to specific IP range on protocols TCP and UDP", "isCorrect": false }
        ]
      },
      {
        "question": "In a scenario where you want to deny all egress traffic from pods except to specific IP ranges, what NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "Deny Egress to all IP ranges", "isCorrect": false },
          { "text": "Deny all Egress", "isCorrect": false },
          { "text": "Allow Egress to specific IP ranges", "isCorrect": true },
          { "text": "Allow all Egress", "isCorrect": false }
        ]
      },
      {
        "question": "In a Kubernetes cluster, you want to allow pods labeled 'app=frontend' to communicate with pods labeled 'app=backend' only if they share the same label 'env=production'. What NetworkPolicy rule should you define?",
        "answers": [
          { "text": "MatchLabels: app=frontend, app=backend", "isCorrect": false },
          { "text": "MatchExpressions: env=production", "isCorrect": true },
          { "text": "Ingress from app=frontend to app=backend with env=production", "isCorrect": false },
          { "text": "NetworkPolicy with PodSelector for both apps and common label env=production", "isCorrect": false }
        ]
      },
      {
        "question": "You need to restrict egress traffic from pods labeled 'role=db' to external IP addresses except for specific ports (e.g., 3306 and 5432). What rule should you define in the NetworkPolicy?",
        "answers": [
          { "text": "Egress from role=db to external IP on ports 3306 and 5432", "isCorrect": true },
          { "text": "Egress to external IP on ports 3306 and 5432", "isCorrect": false },
          { "text": "Deny Egress from role=db", "isCorrect": false },
          { "text": "Allow Egress from role=db on ports 3306 and 5432", "isCorrect": false }
        ]
      },
      {
        "question": "In a scenario where you want to allow ingress traffic only from pods in a specific namespace, what rule should you define in the NetworkPolicy?",
        "answers": [
          { "text": "Ingress from same namespace", "isCorrect": true },
          { "text": "Ingress with NamespaceSelector", "isCorrect": false },
          { "text": "Deny Ingress from other namespaces", "isCorrect": false },
          { "text": "Allow Ingress from specific namespace", "isCorrect": false }
        ]
      },
      {
        "question": "You have a scenario where you want to deny all egress traffic from pods labeled 'tier=public' except to specific external IP addresses. What NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "Deny Egress to all external IP addresses", "isCorrect": false },
          { "text": "Deny all Egress", "isCorrect": false },
          { "text": "Allow Egress to specific external IP addresses", "isCorrect": true },
          { "text": "Allow all Egress to external IP addresses", "isCorrect": false }
        ]
      },
      {
        "question": "You want to allow communication between pods only if they have at least one common label. What NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "MatchLabelsIntersection: 1", "isCorrect": false },
          { "text": "MatchExpressions: 1", "isCorrect": false },
          { "text": "IntersectionLabelSelector: 1", "isCorrect": false },
          { "text": "MatchLabelsIntersection: 0", "isCorrect": true }
        ]
      },
      {
        "question": "In a Kubernetes cluster with multiple namespaces, you need to allow egress traffic from pods labeled 'role=frontend' to pods labeled 'role=backend' only if they belong to the same namespace. What rule should you define in the NetworkPolicy?",
        "answers": [
          { "text": "Egress from role=frontend to role=backend with same namespace", "isCorrect": false },
          { "text": "NetworkPolicy with PodSelector for both roles and same namespace", "isCorrect": true },
          { "text": "Allow Egress between role=frontend and role=backend in same namespace", "isCorrect": false },
          { "text": "Egress to role=backend with same namespace", "isCorrect": false }
        ]
      },
      {
        "question": "You want to allow ingress traffic only from pods labeled 'app=web' to pods labeled 'app=api', and deny all other ingress traffic. What NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "Ingress from app=web to app=api", "isCorrect": true },
          { "text": "Ingress from app=api to app=web", "isCorrect": false },
          { "text": "Deny Ingress from app=web", "isCorrect": false },
          { "text": "Allow Ingress from app=api", "isCorrect": false }
        ]
      },
      {
        "question": "In a scenario where you want to deny ingress traffic to pods labeled 'tier=public', what NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "Deny Ingress from 'tier=public'", "isCorrect": true },
          { "text": "Deny Ingress to 'tier=public'", "isCorrect": false },
          { "text": "Deny all Ingress", "isCorrect": false },
          { "text": "Allow Ingress from 'tier=public'", "isCorrect": false }
        ]
      },
      {
        "question": "You need to allow egress traffic from pods labeled 'role=frontend' to external IP addresses, but only for specific ports (e.g., 80 and 443). What rule should you define in the NetworkPolicy?",
        "answers": [
          { "text": "Egress to external IP on ports 80 and 443", "isCorrect": true },
          { "text": "Egress to external IP", "isCorrect": false },
          { "text": "Egress from role=frontend on ports 80 and 443", "isCorrect": false },
          { "text": "Allow Egress from role=frontend on ports 80 and 443", "isCorrect": false }
        ]
      },
      {
        "question": "In a Kubernetes cluster with multiple namespaces, you want to deny egress traffic from pods labeled 'role=db' to pods labeled 'role=frontend' in a different namespace. What NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "Deny Egress from role=db to role=frontend in different namespace", "isCorrect": true },
          { "text": "Deny Egress to role=frontend in different namespace", "isCorrect": false },
          { "text": "Deny all Egress from role=db", "isCorrect": false },
          { "text": "Allow Egress from role=db to role=frontend in different namespace", "isCorrect": false }
        ]
      },
      {
        "question": "You want to allow ingress traffic from pods labeled 'app=api' to pods labeled 'app=database', and deny all other ingress traffic. What NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "Ingress from app=api to app=database", "isCorrect": true },
          { "text": "Deny Ingress from app=api", "isCorrect": false },
          { "text": "Allow Ingress to app=database", "isCorrect": false },
          { "text": "Deny Ingress to app=database", "isCorrect": false }
        ]
      },
      {
        "question": "In a Kubernetes cluster with multiple namespaces, you need to allow egress traffic from pods labeled 'role=frontend' to pods labeled 'role=backend' only if they belong to the same namespace. What rule should you define in the NetworkPolicy?",
        "answers": [
          { "text": "Egress from role=frontend to role=backend in same namespace", "isCorrect": false },
          { "text": "Allow Egress between role=frontend and role=backend in same namespace", "isCorrect": false },
          { "text": "NetworkPolicy with PodSelector for both roles and same namespace", "isCorrect": true },
          { "text": "Egress to role=backend with same namespace", "isCorrect": false }
        ]
      },
      {
        "question": "You want to allow egress traffic from pods labeled 'app=frontend' to external IP addresses, but only for specific protocols (e.g., TCP and UDP). What rule should you define in the NetworkPolicy?",
        "answers": [
          { "text": "Egress to external IP on protocols TCP and UDP", "isCorrect": true },
          { "text": "Egress to external IP", "isCorrect": false },
          { "text": "Egress from app=frontend on protocols TCP and UDP", "isCorrect": false },
          { "text": "Allow Egress from app=frontend on protocols TCP and UDP", "isCorrect": false }
        ]
      },
      {
        "question": "In a scenario where you want to deny ingress traffic from pods labeled 'tier=public' to pods labeled 'tier=private', what NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "Deny Ingress from tier=public to tier=private", "isCorrect": true },
          { "text": "Deny Ingress to tier=private from tier=public", "isCorrect": false },
          { "text": "Deny all Ingress from tier=public", "isCorrect": false },
          { "text": "Allow Ingress from tier=private to tier=public", "isCorrect": false }
        ]
      },
      {
        "question": "You have a scenario where you want to allow egress traffic from pods labeled 'role=frontend' to external IP addresses, but deny traffic to a specific IP range. What NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "Egress to external IP except specific range from role=frontend", "isCorrect": true },
          { "text": "Egress to specific IP range from role=frontend", "isCorrect": false },
          { "text": "Allow Egress to external IP from role=frontend", "isCorrect": false },
          { "text": "Deny Egress to specific IP range from role=frontend", "isCorrect": false }
        ]
      },
      {
        "question": "You want to allow communication between pods in different namespaces only if they share the same label 'env=production'. What NetworkPolicy rule should you define?",
        "answers": [
          { "text": "Ingress with common label env=production", "isCorrect": true },
          { "text": "Egress to different namespace with label env=production", "isCorrect": false },
          { "text": "NetworkPolicy with PodSelector for both namespaces and common label env=production", "isCorrect": false },
          { "text": "Allow Ingress between namespaces with label env=production", "isCorrect": false }
        ]
      },
      {
        "question": "In a Kubernetes cluster, you need to allow egress traffic from pods labeled 'role=frontend' to external IP addresses, but deny traffic to a specific port (e.g., 8080). What NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "Egress to external IP except port 8080 from role=frontend", "isCorrect": true },
          { "text": "Egress to external IP from role=frontend", "isCorrect": false },
          { "text": "Deny Egress to specific port 8080 from role=frontend", "isCorrect": false },
          { "text": "Allow Egress from role=frontend except port 8080", "isCorrect": false }
        ]
      },
      {
        "question": "You want to deny all egress traffic from pods labeled 'app=public' to external IP addresses. What NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "Deny Egress from app=public to external IP", "isCorrect": true },
          { "text": "Deny all Egress from app=public", "isCorrect": false },
          { "text": "Allow Egress to external IP from app=public", "isCorrect": false },
          { "text": "Allow all Egress from app=public", "isCorrect": false }
        ]
      },
      {
        "question": "You need to allow egress traffic from pods labeled 'role=frontend' to external IP addresses, but only for specific protocols (e.g., TCP). What rule should you define in the NetworkPolicy?",
        "answers": [
          { "text": "Egress to external IP on protocol TCP from role=frontend", "isCorrect": true },
          { "text": "Egress to external IP from role=frontend", "isCorrect": false },
          { "text": "Allow Egress from role=frontend on protocol TCP", "isCorrect": false },
          { "text": "Deny Egress to external IP from role=frontend on protocol TCP", "isCorrect": false }
        ]
      },
      {
        "question": "In a scenario where you want to deny ingress traffic from pods labeled 'tier=public' to pods labeled 'tier=private' in different namespaces, what NetworkPolicy rule should be defined?",
        "answers": [
          { "text": "Deny Ingress from tier=public to tier=private in different namespace", "isCorrect": true },
          { "text": "Deny Ingress to tier=private from tier=public in different namespace", "isCorrect": false },
          { "text": "Deny all Ingress from tier=public", "isCorrect": false },
          { "text": "Allow Ingress from tier=private to tier=public in different namespace", "isCorrect": false }
        ]
      },
      {
        "question": "You want to allow egress traffic from pods labeled 'app=frontend' to external IP addresses, but deny traffic to a specific IP address (e.g., 203.0.113.5). What rule should you define in the NetworkPolicy?",
        "answers": [
          { "text": "Egress to external IP except 203.0.113.5 from app=frontend", "isCorrect": true },
          { "text": "Egress to external IP from app=frontend", "isCorrect": false },
          { "text": "Deny Egress to specific IP address 203.0.113.5 from app=frontend", "isCorrect": false },
          { "text": "Allow Egress from app=frontend except to 203.0.113.5", "isCorrect": false }
        ]
      },
      {
        "question": "In a Kubernetes cluster with multiple namespaces, you need to allow egress traffic from pods labeled 'role=frontend' to pods labeled 'role=backend' only if they share at least two labels. What rule should you define in the NetworkPolicy?",
        "answers": [
          { "text": "MatchLabelsIntersection: 2", "isCorrect": true },
          { "text": "MatchExpressions: 2", "isCorrect": false },
          { "text": "MinimumLabels: 2", "isCorrect": false },
          { "text": "RequiredLabels: 2", "isCorrect": false }
        ]
      }
  ]
  